
Motor_Control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  00000a2a  00000abe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a2a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800138  00800138  00000af6  2**0
                  ALLOC
  3 .stab         00000d08  00000000  00000000  00000af8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000218  00000000  00000000  00001800  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000168  00000000  00000000  00001a18  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010be  00000000  00000000  00001b80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000064e  00000000  00000000  00002c3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ab6  00000000  00000000  0000328c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000270  00000000  00000000  00003d44  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000384  00000000  00000000  00003fb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a36  00000000  00000000  00004338  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00004d6e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4a 00 	jmp	0x94	; 0x94 <__ctors_end>
   4:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
   8:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
   c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  10:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  14:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  18:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  1c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  20:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  24:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  28:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  2c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  30:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  34:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  38:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  3c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  40:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  44:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  48:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  4c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  50:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  54:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  58:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  5c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  60:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  64:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  68:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  6c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  70:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  74:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  78:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  7c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  80:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  84:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  88:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  8c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  90:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf ef       	ldi	r28, 0xFF	; 255
  9a:	d0 e1       	ldi	r29, 0x10	; 16
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
  a0:	11 e0       	ldi	r17, 0x01	; 1
  a2:	a0 e0       	ldi	r26, 0x00	; 0
  a4:	b1 e0       	ldi	r27, 0x01	; 1
  a6:	ea e2       	ldi	r30, 0x2A	; 42
  a8:	fa e0       	ldi	r31, 0x0A	; 10
  aa:	00 e0       	ldi	r16, 0x00	; 0
  ac:	0b bf       	out	0x3b, r16	; 59
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
  b0:	07 90       	elpm	r0, Z+
  b2:	0d 92       	st	X+, r0
  b4:	a8 33       	cpi	r26, 0x38	; 56
  b6:	b1 07       	cpc	r27, r17
  b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
  ba:	11 e0       	ldi	r17, 0x01	; 1
  bc:	a8 e3       	ldi	r26, 0x38	; 56
  be:	b1 e0       	ldi	r27, 0x01	; 1
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
  c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
  c4:	ac 34       	cpi	r26, 0x4C	; 76
  c6:	b1 07       	cpc	r27, r17
  c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
  ca:	0e 94 6f 01 	call	0x2de	; 0x2de <main>
  ce:	0c 94 13 05 	jmp	0xa26	; 0xa26 <_exit>

000000d2 <__bad_interrupt>:
  d2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d6 <initPort>:
unsigned char strBuff[20]={0};


void initPort(void)
{
	DDRC  = 0xff;	// LCD 데이터 및 명령 
  d6:	8f ef       	ldi	r24, 0xFF	; 255
  d8:	87 b9       	out	0x07, r24	; 7
	PORTC = 0xff;
  da:	88 b9       	out	0x08, r24	; 8
	DDRG  = 0xff;	// LCD 제어 출력 (RS, RW, E)
  dc:	83 bb       	out	0x13, r24	; 19

	DDRD  = 0xfc;	// 아날로그 입력 
  de:	9c ef       	ldi	r25, 0xFC	; 252
  e0:	9a b9       	out	0x0a, r25	; 10
	DDRE  = 0xff;	// PORTE 출력 
  e2:	8d b9       	out	0x0d, r24	; 13
}
  e4:	08 95       	ret

000000e6 <initMotor>:

// DC모터 초기화
void initMotor(void)
{
	TCCR3A=0xAA;	// COM3A[1:0]=10,  비교일치시 클리어
  e6:	8a ea       	ldi	r24, 0xAA	; 170
  e8:	80 93 90 00 	sts	0x0090, r24
					//				   TOP 셋 
					// WGM3[3:0]=1010, Phase correct PWM mode 
					//                 TOP값은 ICR 레지스터가 결정
	TCCR3B=0x13;	// CS3[2:0]=011, 64 분주 
  ec:	83 e1       	ldi	r24, 0x13	; 19
  ee:	80 93 91 00 	sts	0x0091, r24
					 
					 
	ICR3 = FREQ_CLKIO/2/PRESCALE/1000*DC_PERIOD;	
  f2:	85 e3       	ldi	r24, 0x35	; 53
  f4:	9c e0       	ldi	r25, 0x0C	; 12
  f6:	90 93 97 00 	sts	0x0097, r25
  fa:	80 93 96 00 	sts	0x0096, r24
					// 최고값(Top)3125, 40Hz(25msec) 
}
  fe:	08 95       	ret

00000100 <CtrlDcMotor>:
// DC모터 속도 제어와 모터 회전 방향 제어 
void CtrlDcMotor(unsigned int speed, unsigned int dir)
{
	unsigned int level=5;

	PORTE&=0xFC;
 100:	2e b1       	in	r18, 0x0e	; 14
 102:	2c 7f       	andi	r18, 0xFC	; 252
 104:	2e b9       	out	0x0e, r18	; 14

	// DC모터 회전 방향 결정
	if(dir==0)		// 시계 방향 회전
 106:	61 15       	cp	r22, r1
 108:	71 05       	cpc	r23, r1
 10a:	a9 f4       	brne	.+42     	; 0x136 <CtrlDcMotor+0x36>
	{
		// speed에 따른 속도 제어
		OCR3A=(speed*FREQ_CLKIO/2/PRESCALE/1000*DC_PERIOD)/level;
 10c:	bc 01       	movw	r22, r24
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	25 e3       	ldi	r18, 0x35	; 53
 114:	3c e0       	ldi	r19, 0x0C	; 12
 116:	40 e0       	ldi	r20, 0x00	; 0
 118:	50 e0       	ldi	r21, 0x00	; 0
 11a:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <__mulsi3>
 11e:	25 e0       	ldi	r18, 0x05	; 5
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	40 e0       	ldi	r20, 0x00	; 0
 124:	50 e0       	ldi	r21, 0x00	; 0
 126:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__divmodsi4>
 12a:	30 93 99 00 	sts	0x0099, r19
 12e:	20 93 98 00 	sts	0x0098, r18
		PORTE|=0x01;	
 132:	70 9a       	sbi	0x0e, 0	; 14
 134:	08 95       	ret
	}
	else if(dir==1)	// 반시계 방향 회전 
 136:	61 30       	cpi	r22, 0x01	; 1
 138:	71 05       	cpc	r23, r1
 13a:	a9 f4       	brne	.+42     	; 0x166 <CtrlDcMotor+0x66>
	{
		// speed에 따른 속도 제어
		OCR3A=(speed*FREQ_CLKIO/2/PRESCALE/1000*DC_PERIOD)/level;
 13c:	bc 01       	movw	r22, r24
 13e:	80 e0       	ldi	r24, 0x00	; 0
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	25 e3       	ldi	r18, 0x35	; 53
 144:	3c e0       	ldi	r19, 0x0C	; 12
 146:	40 e0       	ldi	r20, 0x00	; 0
 148:	50 e0       	ldi	r21, 0x00	; 0
 14a:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <__mulsi3>
 14e:	25 e0       	ldi	r18, 0x05	; 5
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	40 e0       	ldi	r20, 0x00	; 0
 154:	50 e0       	ldi	r21, 0x00	; 0
 156:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__divmodsi4>
 15a:	30 93 99 00 	sts	0x0099, r19
 15e:	20 93 98 00 	sts	0x0098, r18
		PORTE|=0x02;
 162:	71 9a       	sbi	0x0e, 1	; 14
 164:	08 95       	ret
	}
	else			// 모터 정지 
	{
		OCR3A=100;
 166:	84 e6       	ldi	r24, 0x64	; 100
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	90 93 99 00 	sts	0x0099, r25
 16e:	80 93 98 00 	sts	0x0098, r24
		OCR3B=100;
 172:	90 93 9b 00 	sts	0x009B, r25
 176:	80 93 9a 00 	sts	0x009A, r24
 17a:	08 95       	ret

0000017c <ButtonInput>:
	unsigned char up;
	unsigned char down;
	unsigned char* Button_Info;
		
	// 마스크를 이용해 포트D 입력에서 0번핀 입력 추출 
	in = PIND & BUTTON0_MASK;
 17c:	39 b1       	in	r19, 0x09	; 9

	if(in>0) up=0;	// S2버튼 안 눌러짐 
	else up=1;		// S2버튼 눌러짐

	// 마스크를 이용해 포트D 입력에서 1번핀 입력 추출 
	in = PIND & BUTTON1_MASK;
 17e:	49 b1       	in	r20, 0x09	; 9

	if(in>0) down=0;	// S3버튼 안 눌러짐	
 180:	21 e0       	ldi	r18, 0x01	; 1
 182:	41 fd       	sbrc	r20, 1
 184:	20 e0       	ldi	r18, 0x00	; 0
	else down=1;		// S3버튼 눌러짐

	if(up==1 && down==0) Button_Info= " ON";	// S2버튼 누른 경우
 186:	30 fd       	sbrc	r19, 0
 188:	05 c0       	rjmp	.+10     	; 0x194 <ButtonInput+0x18>
 18a:	22 23       	and	r18, r18
 18c:	39 f4       	brne	.+14     	; 0x19c <ButtonInput+0x20>
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	91 e0       	ldi	r25, 0x01	; 1
 192:	08 95       	ret
	else if(up==0 && down==1) Button_Info = "OFF";	// S3버튼 누른 경우
 194:	21 30       	cpi	r18, 0x01	; 1
 196:	11 f4       	brne	.+4      	; 0x19c <ButtonInput+0x20>
 198:	84 e0       	ldi	r24, 0x04	; 4
 19a:	91 e0       	ldi	r25, 0x01	; 1
	
	return Button_Info;
}
 19c:	08 95       	ret

0000019e <DcMotorSpeedControl>:

// 모터 속도값 제어 함수 (버튼 입력에 따른)
unsigned char DcMotorSpeedControl(unsigned char bt_in, unsigned char speed)
{
	// S2 버튼이 눌러지면 
	if(bt_in==SPEED_UP) 
 19e:	81 30       	cpi	r24, 0x01	; 1
 1a0:	21 f4       	brne	.+8      	; 0x1aa <DcMotorSpeedControl+0xc>
	{
		if(speed==SPEED_MAX) return speed;
 1a2:	65 30       	cpi	r22, 0x05	; 5
 1a4:	31 f0       	breq	.+12     	; 0x1b2 <DcMotorSpeedControl+0x14>
		return (++speed);	// 속도 1 증가 
 1a6:	6f 5f       	subi	r22, 0xFF	; 255
 1a8:	04 c0       	rjmp	.+8      	; 0x1b2 <DcMotorSpeedControl+0x14>
	}
	// S3 버튼이 눌러지면
	if(bt_in==SPEED_DOWN)
 1aa:	82 30       	cpi	r24, 0x02	; 2
 1ac:	11 f4       	brne	.+4      	; 0x1b2 <DcMotorSpeedControl+0x14>
	{
		if(speed==SPEED_MIN) return speed;
 1ae:	61 11       	cpse	r22, r1
		return (--speed);	// 속도 1 감소 
 1b0:	61 50       	subi	r22, 0x01	; 1
	}
	return speed;
}
 1b2:	86 2f       	mov	r24, r22
 1b4:	08 95       	ret

000001b6 <delay>:
void delay(unsigned int k)
{
    unsigned int i;

	for(i=0;i<k;i++); 
}
 1b6:	08 95       	ret

000001b8 <us_delay>:

void us_delay(unsigned int us_time)
{
	unsigned int i;

	for(i=0; i<us_time; i++) // 4 cycle +
 1b8:	20 e0       	ldi	r18, 0x00	; 0
 1ba:	30 e0       	ldi	r19, 0x00	; 0
 1bc:	08 c0       	rjmp	.+16     	; 0x1ce <us_delay+0x16>
	{
	    asm("PUSH R0"); 	// 2 cycle +
 1be:	0f 92       	push	r0
		asm("POP R0"); 		// 2 cycle +
 1c0:	0f 90       	pop	r0
		asm("PUSH R0"); 	// 2 cycle +
 1c2:	0f 92       	push	r0
		asm("POP R0"); 		// 2 cycle + =12 cycle for 11.0592MHZ
 1c4:	0f 90       	pop	r0
		asm("PUSH R0"); 	// 2 cycle +
 1c6:	0f 92       	push	r0
		asm("POP R0"); 		// 2 cycle = 16 cycle = 1us for 16MHz
 1c8:	0f 90       	pop	r0

void us_delay(unsigned int us_time)
{
	unsigned int i;

	for(i=0; i<us_time; i++) // 4 cycle +
 1ca:	2f 5f       	subi	r18, 0xFF	; 255
 1cc:	3f 4f       	sbci	r19, 0xFF	; 255
 1ce:	28 17       	cp	r18, r24
 1d0:	39 07       	cpc	r19, r25
 1d2:	a9 f7       	brne	.-22     	; 0x1be <us_delay+0x6>
		asm("PUSH R0"); 	// 2 cycle +
		asm("POP R0"); 		// 2 cycle + =12 cycle for 11.0592MHZ
		asm("PUSH R0"); 	// 2 cycle +
		asm("POP R0"); 		// 2 cycle = 16 cycle = 1us for 16MHz
	}
}
 1d4:	08 95       	ret

000001d6 <ms_delay>:

void ms_delay(unsigned int ms_time)
{
 1d6:	0f 93       	push	r16
 1d8:	1f 93       	push	r17
 1da:	cf 93       	push	r28
 1dc:	df 93       	push	r29
 1de:	8c 01       	movw	r16, r24
    unsigned int i;
    
    for(i=0; i<ms_time;i++)
 1e0:	c0 e0       	ldi	r28, 0x00	; 0
 1e2:	d0 e0       	ldi	r29, 0x00	; 0
 1e4:	05 c0       	rjmp	.+10     	; 0x1f0 <ms_delay+0x1a>
        us_delay(1000);
 1e6:	88 ee       	ldi	r24, 0xE8	; 232
 1e8:	93 e0       	ldi	r25, 0x03	; 3
 1ea:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <us_delay>

void ms_delay(unsigned int ms_time)
{
    unsigned int i;
    
    for(i=0; i<ms_time;i++)
 1ee:	21 96       	adiw	r28, 0x01	; 1
 1f0:	c0 17       	cp	r28, r16
 1f2:	d1 07       	cpc	r29, r17
 1f4:	c1 f7       	brne	.-16     	; 0x1e6 <ms_delay+0x10>
        us_delay(1000);
}
 1f6:	df 91       	pop	r29
 1f8:	cf 91       	pop	r28
 1fa:	1f 91       	pop	r17
 1fc:	0f 91       	pop	r16
 1fe:	08 95       	ret

00000200 <E_Pulse>:
#define EN_0      (PORTG &= 0xFB)

//LCD Functions =================================================
void E_Pulse(void)
{
	EN_1;
 200:	a2 9a       	sbi	0x14, 2	; 20

	us_delay(100);
 202:	84 e6       	ldi	r24, 0x64	; 100
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <us_delay>

	EN_0;
 20a:	a2 98       	cbi	0x14, 2	; 20
}
 20c:	08 95       	ret

0000020e <LCD_init>:

void LCD_init(void)
{
	ms_delay(40);
 20e:	88 e2       	ldi	r24, 0x28	; 40
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <ms_delay>

	PORTC = 0x38;	// Function Set
 216:	88 e3       	ldi	r24, 0x38	; 56
 218:	88 b9       	out	0x08, r24	; 8
	E_Pulse();
 21a:	0e 94 00 01 	call	0x200	; 0x200 <E_Pulse>
    us_delay(40);
 21e:	88 e2       	ldi	r24, 0x28	; 40
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <us_delay>

	PORTC = 0x0c; // DisPlay ON/OFF Control
 226:	8c e0       	ldi	r24, 0x0C	; 12
 228:	88 b9       	out	0x08, r24	; 8
	us_delay(40);
 22a:	88 e2       	ldi	r24, 0x28	; 40
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <us_delay>
	E_Pulse();
 232:	0e 94 00 01 	call	0x200	; 0x200 <E_Pulse>
	
	PORTC = 0x01; // Display Clear
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	88 b9       	out	0x08, r24	; 8
	ms_delay(2);
 23a:	82 e0       	ldi	r24, 0x02	; 2
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <ms_delay>
	E_Pulse();
 242:	0e 94 00 01 	call	0x200	; 0x200 <E_Pulse>

	PORTC = 0x06; // Entry Mode Set
 246:	86 e0       	ldi	r24, 0x06	; 6
 248:	88 b9       	out	0x08, r24	; 8
	E_Pulse();
 24a:	0e 94 00 01 	call	0x200	; 0x200 <E_Pulse>
}
 24e:	08 95       	ret

00000250 <LCD_cmd>:

void LCD_cmd(unsigned char cmd)
{
	LCD_RS_0;
 250:	a0 98       	cbi	0x14, 0	; 20
	LCD_RW_0;
 252:	a1 98       	cbi	0x14, 1	; 20
	PORTC=cmd;
 254:	88 b9       	out	0x08, r24	; 8
	E_Pulse();
 256:	0e 94 00 01 	call	0x200	; 0x200 <E_Pulse>
}	
 25a:	08 95       	ret

0000025c <Write_Char>:

void Write_Char(unsigned char buf)
{
	LCD_RS_1;
 25c:	a0 9a       	sbi	0x14, 0	; 20
	LCD_RW_0;
 25e:	a1 98       	cbi	0x14, 1	; 20
	PORTC=buf;
 260:	88 b9       	out	0x08, r24	; 8
	E_Pulse();
 262:	0e 94 00 01 	call	0x200	; 0x200 <E_Pulse>
}	
 266:	08 95       	ret

00000268 <LCD_Disp>:

void LCD_Disp(char x,char y)
{
	LCD_RS_0;
 268:	a0 98       	cbi	0x14, 0	; 20
	LCD_RW_0;
 26a:	a1 98       	cbi	0x14, 1	; 20

	if(y==0) PORTC = x + 0x80;
 26c:	66 23       	and	r22, r22
 26e:	11 f4       	brne	.+4      	; 0x274 <LCD_Disp+0xc>
 270:	80 58       	subi	r24, 0x80	; 128
 272:	03 c0       	rjmp	.+6      	; 0x27a <LCD_Disp+0x12>
	else if(y==1) PORTC = x + 0xc0;
 274:	61 30       	cpi	r22, 0x01	; 1
 276:	11 f4       	brne	.+4      	; 0x27c <LCD_Disp+0x14>
 278:	80 54       	subi	r24, 0x40	; 64
 27a:	88 b9       	out	0x08, r24	; 8
	E_Pulse();
 27c:	0e 94 00 01 	call	0x200	; 0x200 <E_Pulse>
}
 280:	08 95       	ret

00000282 <LCD_Write>:
 
void LCD_Write(char x, char y,char *str)
{
 282:	0f 93       	push	r16
 284:	1f 93       	push	r17
 286:	cf 93       	push	r28
 288:	df 93       	push	r29
 28a:	00 d0       	rcall	.+0      	; 0x28c <LCD_Write+0xa>
 28c:	cd b7       	in	r28, 0x3d	; 61
 28e:	de b7       	in	r29, 0x3e	; 62
	LCD_Disp(x,y);
 290:	49 83       	std	Y+1, r20	; 0x01
 292:	5a 83       	std	Y+2, r21	; 0x02
 294:	0e 94 34 01 	call	0x268	; 0x268 <LCD_Disp>
 298:	49 81       	ldd	r20, Y+1	; 0x01
 29a:	04 2f       	mov	r16, r20
 29c:	5a 81       	ldd	r21, Y+2	; 0x02
 29e:	15 2f       	mov	r17, r21
	while(*str)
 2a0:	02 c0       	rjmp	.+4      	; 0x2a6 <LCD_Write+0x24>
	Write_Char(*str++);
 2a2:	0e 94 2e 01 	call	0x25c	; 0x25c <Write_Char>
}
 
void LCD_Write(char x, char y,char *str)
{
	LCD_Disp(x,y);
	while(*str)
 2a6:	f8 01       	movw	r30, r16
 2a8:	81 91       	ld	r24, Z+
 2aa:	8f 01       	movw	r16, r30
 2ac:	88 23       	and	r24, r24
 2ae:	c9 f7       	brne	.-14     	; 0x2a2 <LCD_Write+0x20>
	Write_Char(*str++);
}
 2b0:	0f 90       	pop	r0
 2b2:	0f 90       	pop	r0
 2b4:	df 91       	pop	r29
 2b6:	cf 91       	pop	r28
 2b8:	1f 91       	pop	r17
 2ba:	0f 91       	pop	r16
 2bc:	08 95       	ret

000002be <LCD_Write_char>:

void LCD_Write_char(char x, char y, unsigned char ch)
{
 2be:	cf 93       	push	r28
 2c0:	df 93       	push	r29
 2c2:	0f 92       	push	r0
 2c4:	cd b7       	in	r28, 0x3d	; 61
 2c6:	de b7       	in	r29, 0x3e	; 62
	LCD_Disp(x,y);
 2c8:	49 83       	std	Y+1, r20	; 0x01
 2ca:	0e 94 34 01 	call	0x268	; 0x268 <LCD_Disp>
	Write_Char(ch);
 2ce:	49 81       	ldd	r20, Y+1	; 0x01
 2d0:	84 2f       	mov	r24, r20
 2d2:	0e 94 2e 01 	call	0x25c	; 0x25c <Write_Char>
}
 2d6:	0f 90       	pop	r0
 2d8:	df 91       	pop	r29
 2da:	cf 91       	pop	r28
 2dc:	08 95       	ret

000002de <main>:
{
#if Experiment == 1
	unsigned char* out;
	unsigned int speed=0;

	initPort();	
 2de:	0e 94 6b 00 	call	0xd6	; 0xd6 <initPort>
	LCD_init();
 2e2:	0e 94 07 01 	call	0x20e	; 0x20e <LCD_init>
	initMotor();
 2e6:	0e 94 73 00 	call	0xe6	; 0xe6 <initMotor>
	sei();
 2ea:	78 94       	sei

	LCD_cmd(0x01);	// LCD 화면 지우기 
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	0e 94 28 01 	call	0x250	; 0x250 <LCD_cmd>
	ms_delay(50);	// 50ms 지연 
 2f2:	82 e3       	ldi	r24, 0x32	; 50
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <ms_delay>

	LCD_Write(0,0, table1);	// 초기 글자 출력
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	60 e0       	ldi	r22, 0x00	; 0
 2fe:	47 e2       	ldi	r20, 0x27	; 39
 300:	51 e0       	ldi	r21, 0x01	; 1
 302:	0e 94 41 01 	call	0x282	; 0x282 <LCD_Write>
	LCD_Write(0,1, table2);
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	61 e0       	ldi	r22, 0x01	; 1
 30a:	47 e1       	ldi	r20, 0x17	; 23
 30c:	51 e0       	ldi	r21, 0x01	; 1
 30e:	0e 94 41 01 	call	0x282	; 0x282 <LCD_Write>

	ms_delay(1500);
 312:	8c ed       	ldi	r24, 0xDC	; 220
 314:	95 e0       	ldi	r25, 0x05	; 5
 316:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <ms_delay>
	LCD_cmd(0x01);			// LCD 화면 지우기 
 31a:	81 e0       	ldi	r24, 0x01	; 1
 31c:	0e 94 28 01 	call	0x250	; 0x250 <LCD_cmd>
	ms_delay(100);
 320:	84 e6       	ldi	r24, 0x64	; 100
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <ms_delay>
		else if(strcmp(out,"OFF")==0 )
		CtrlDcMotor(0, 1);		  
	

		// DC모터상태 LCD에 출력 											 
		sprintf(strBuff, "MOTOR_STATE=%s",out  );
 328:	08 e3       	ldi	r16, 0x38	; 56
 32a:	11 e0       	ldi	r17, 0x01	; 1
 32c:	28 e0       	ldi	r18, 0x08	; 8
 32e:	e2 2e       	mov	r14, r18
 330:	21 e0       	ldi	r18, 0x01	; 1
 332:	f2 2e       	mov	r15, r18
	LCD_cmd(0x01);			// LCD 화면 지우기 
	ms_delay(100);
	while(1)
	{	
		// CPU보드의 버튼 S2(+)와 S3(-)를 입력 받음 	
		out = ButtonInput();
 334:	0e 94 be 00 	call	0x17c	; 0x17c <ButtonInput>
 338:	ec 01       	movw	r28, r24

		// DC모터 속도와 회전 방향 제어
		if(strcmp(out," ON")==0)
 33a:	60 e0       	ldi	r22, 0x00	; 0
 33c:	71 e0       	ldi	r23, 0x01	; 1
 33e:	0e 94 34 02 	call	0x468	; 0x468 <strcmp>
 342:	00 97       	sbiw	r24, 0x00	; 0
 344:	19 f4       	brne	.+6      	; 0x34c <main+0x6e>
		CtrlDcMotor(4, 1);		  
 346:	84 e0       	ldi	r24, 0x04	; 4
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	09 c0       	rjmp	.+18     	; 0x35e <main+0x80>
		else if(strcmp(out,"OFF")==0 )
 34c:	ce 01       	movw	r24, r28
 34e:	64 e0       	ldi	r22, 0x04	; 4
 350:	71 e0       	ldi	r23, 0x01	; 1
 352:	0e 94 34 02 	call	0x468	; 0x468 <strcmp>
 356:	00 97       	sbiw	r24, 0x00	; 0
 358:	31 f4       	brne	.+12     	; 0x366 <main+0x88>
		CtrlDcMotor(0, 1);		  
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	61 e0       	ldi	r22, 0x01	; 1
 360:	70 e0       	ldi	r23, 0x00	; 0
 362:	0e 94 80 00 	call	0x100	; 0x100 <CtrlDcMotor>
	

		// DC모터상태 LCD에 출력 											 
		sprintf(strBuff, "MOTOR_STATE=%s",out  );
 366:	00 d0       	rcall	.+0      	; 0x368 <main+0x8a>
 368:	00 d0       	rcall	.+0      	; 0x36a <main+0x8c>
 36a:	00 d0       	rcall	.+0      	; 0x36c <main+0x8e>
 36c:	ed b7       	in	r30, 0x3d	; 61
 36e:	fe b7       	in	r31, 0x3e	; 62
 370:	31 96       	adiw	r30, 0x01	; 1
 372:	ad b7       	in	r26, 0x3d	; 61
 374:	be b7       	in	r27, 0x3e	; 62
 376:	12 96       	adiw	r26, 0x02	; 2
 378:	1c 93       	st	X, r17
 37a:	0e 93       	st	-X, r16
 37c:	11 97       	sbiw	r26, 0x01	; 1
 37e:	f3 82       	std	Z+3, r15	; 0x03
 380:	e2 82       	std	Z+2, r14	; 0x02
 382:	d5 83       	std	Z+5, r29	; 0x05
 384:	c4 83       	std	Z+4, r28	; 0x04
 386:	0e 94 3d 02 	call	0x47a	; 0x47a <sprintf>
		LCD_Write(0,1,strBuff);
 38a:	8d b7       	in	r24, 0x3d	; 61
 38c:	9e b7       	in	r25, 0x3e	; 62
 38e:	06 96       	adiw	r24, 0x06	; 6
 390:	0f b6       	in	r0, 0x3f	; 63
 392:	f8 94       	cli
 394:	9e bf       	out	0x3e, r25	; 62
 396:	0f be       	out	0x3f, r0	; 63
 398:	8d bf       	out	0x3d, r24	; 61
 39a:	80 e0       	ldi	r24, 0x00	; 0
 39c:	61 e0       	ldi	r22, 0x01	; 1
 39e:	48 e3       	ldi	r20, 0x38	; 56
 3a0:	51 e0       	ldi	r21, 0x01	; 1
 3a2:	0e 94 41 01 	call	0x282	; 0x282 <LCD_Write>

		ms_delay(100);
 3a6:	84 e6       	ldi	r24, 0x64	; 100
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <ms_delay>
	}
 3ae:	c2 cf       	rjmp	.-124    	; 0x334 <main+0x56>

000003b0 <__mulsi3>:
 3b0:	62 9f       	mul	r22, r18
 3b2:	d0 01       	movw	r26, r0
 3b4:	73 9f       	mul	r23, r19
 3b6:	f0 01       	movw	r30, r0
 3b8:	82 9f       	mul	r24, r18
 3ba:	e0 0d       	add	r30, r0
 3bc:	f1 1d       	adc	r31, r1
 3be:	64 9f       	mul	r22, r20
 3c0:	e0 0d       	add	r30, r0
 3c2:	f1 1d       	adc	r31, r1
 3c4:	92 9f       	mul	r25, r18
 3c6:	f0 0d       	add	r31, r0
 3c8:	83 9f       	mul	r24, r19
 3ca:	f0 0d       	add	r31, r0
 3cc:	74 9f       	mul	r23, r20
 3ce:	f0 0d       	add	r31, r0
 3d0:	65 9f       	mul	r22, r21
 3d2:	f0 0d       	add	r31, r0
 3d4:	99 27       	eor	r25, r25
 3d6:	72 9f       	mul	r23, r18
 3d8:	b0 0d       	add	r27, r0
 3da:	e1 1d       	adc	r30, r1
 3dc:	f9 1f       	adc	r31, r25
 3de:	63 9f       	mul	r22, r19
 3e0:	b0 0d       	add	r27, r0
 3e2:	e1 1d       	adc	r30, r1
 3e4:	f9 1f       	adc	r31, r25
 3e6:	bd 01       	movw	r22, r26
 3e8:	cf 01       	movw	r24, r30
 3ea:	11 24       	eor	r1, r1
 3ec:	08 95       	ret

000003ee <__divmodsi4>:
 3ee:	97 fb       	bst	r25, 7
 3f0:	09 2e       	mov	r0, r25
 3f2:	05 26       	eor	r0, r21
 3f4:	0e d0       	rcall	.+28     	; 0x412 <__divmodsi4_neg1>
 3f6:	57 fd       	sbrc	r21, 7
 3f8:	04 d0       	rcall	.+8      	; 0x402 <__divmodsi4_neg2>
 3fa:	14 d0       	rcall	.+40     	; 0x424 <__udivmodsi4>
 3fc:	0a d0       	rcall	.+20     	; 0x412 <__divmodsi4_neg1>
 3fe:	00 1c       	adc	r0, r0
 400:	38 f4       	brcc	.+14     	; 0x410 <__divmodsi4_exit>

00000402 <__divmodsi4_neg2>:
 402:	50 95       	com	r21
 404:	40 95       	com	r20
 406:	30 95       	com	r19
 408:	21 95       	neg	r18
 40a:	3f 4f       	sbci	r19, 0xFF	; 255
 40c:	4f 4f       	sbci	r20, 0xFF	; 255
 40e:	5f 4f       	sbci	r21, 0xFF	; 255

00000410 <__divmodsi4_exit>:
 410:	08 95       	ret

00000412 <__divmodsi4_neg1>:
 412:	f6 f7       	brtc	.-4      	; 0x410 <__divmodsi4_exit>
 414:	90 95       	com	r25
 416:	80 95       	com	r24
 418:	70 95       	com	r23
 41a:	61 95       	neg	r22
 41c:	7f 4f       	sbci	r23, 0xFF	; 255
 41e:	8f 4f       	sbci	r24, 0xFF	; 255
 420:	9f 4f       	sbci	r25, 0xFF	; 255
 422:	08 95       	ret

00000424 <__udivmodsi4>:
 424:	a1 e2       	ldi	r26, 0x21	; 33
 426:	1a 2e       	mov	r1, r26
 428:	aa 1b       	sub	r26, r26
 42a:	bb 1b       	sub	r27, r27
 42c:	fd 01       	movw	r30, r26
 42e:	0d c0       	rjmp	.+26     	; 0x44a <__udivmodsi4_ep>

00000430 <__udivmodsi4_loop>:
 430:	aa 1f       	adc	r26, r26
 432:	bb 1f       	adc	r27, r27
 434:	ee 1f       	adc	r30, r30
 436:	ff 1f       	adc	r31, r31
 438:	a2 17       	cp	r26, r18
 43a:	b3 07       	cpc	r27, r19
 43c:	e4 07       	cpc	r30, r20
 43e:	f5 07       	cpc	r31, r21
 440:	20 f0       	brcs	.+8      	; 0x44a <__udivmodsi4_ep>
 442:	a2 1b       	sub	r26, r18
 444:	b3 0b       	sbc	r27, r19
 446:	e4 0b       	sbc	r30, r20
 448:	f5 0b       	sbc	r31, r21

0000044a <__udivmodsi4_ep>:
 44a:	66 1f       	adc	r22, r22
 44c:	77 1f       	adc	r23, r23
 44e:	88 1f       	adc	r24, r24
 450:	99 1f       	adc	r25, r25
 452:	1a 94       	dec	r1
 454:	69 f7       	brne	.-38     	; 0x430 <__udivmodsi4_loop>
 456:	60 95       	com	r22
 458:	70 95       	com	r23
 45a:	80 95       	com	r24
 45c:	90 95       	com	r25
 45e:	9b 01       	movw	r18, r22
 460:	ac 01       	movw	r20, r24
 462:	bd 01       	movw	r22, r26
 464:	cf 01       	movw	r24, r30
 466:	08 95       	ret

00000468 <strcmp>:
 468:	fb 01       	movw	r30, r22
 46a:	dc 01       	movw	r26, r24
 46c:	8d 91       	ld	r24, X+
 46e:	01 90       	ld	r0, Z+
 470:	80 19       	sub	r24, r0
 472:	01 10       	cpse	r0, r1
 474:	d9 f3       	breq	.-10     	; 0x46c <strcmp+0x4>
 476:	99 0b       	sbc	r25, r25
 478:	08 95       	ret

0000047a <sprintf>:
 47a:	0f 93       	push	r16
 47c:	1f 93       	push	r17
 47e:	cf 93       	push	r28
 480:	df 93       	push	r29
 482:	cd b7       	in	r28, 0x3d	; 61
 484:	de b7       	in	r29, 0x3e	; 62
 486:	2e 97       	sbiw	r28, 0x0e	; 14
 488:	0f b6       	in	r0, 0x3f	; 63
 48a:	f8 94       	cli
 48c:	de bf       	out	0x3e, r29	; 62
 48e:	0f be       	out	0x3f, r0	; 63
 490:	cd bf       	out	0x3d, r28	; 61
 492:	0d 89       	ldd	r16, Y+21	; 0x15
 494:	1e 89       	ldd	r17, Y+22	; 0x16
 496:	86 e0       	ldi	r24, 0x06	; 6
 498:	8c 83       	std	Y+4, r24	; 0x04
 49a:	1a 83       	std	Y+2, r17	; 0x02
 49c:	09 83       	std	Y+1, r16	; 0x01
 49e:	8f ef       	ldi	r24, 0xFF	; 255
 4a0:	9f e7       	ldi	r25, 0x7F	; 127
 4a2:	9e 83       	std	Y+6, r25	; 0x06
 4a4:	8d 83       	std	Y+5, r24	; 0x05
 4a6:	ae 01       	movw	r20, r28
 4a8:	47 5e       	subi	r20, 0xE7	; 231
 4aa:	5f 4f       	sbci	r21, 0xFF	; 255
 4ac:	ce 01       	movw	r24, r28
 4ae:	01 96       	adiw	r24, 0x01	; 1
 4b0:	6f 89       	ldd	r22, Y+23	; 0x17
 4b2:	78 8d       	ldd	r23, Y+24	; 0x18
 4b4:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <vfprintf>
 4b8:	ef 81       	ldd	r30, Y+7	; 0x07
 4ba:	f8 85       	ldd	r31, Y+8	; 0x08
 4bc:	e0 0f       	add	r30, r16
 4be:	f1 1f       	adc	r31, r17
 4c0:	10 82       	st	Z, r1
 4c2:	2e 96       	adiw	r28, 0x0e	; 14
 4c4:	0f b6       	in	r0, 0x3f	; 63
 4c6:	f8 94       	cli
 4c8:	de bf       	out	0x3e, r29	; 62
 4ca:	0f be       	out	0x3f, r0	; 63
 4cc:	cd bf       	out	0x3d, r28	; 61
 4ce:	df 91       	pop	r29
 4d0:	cf 91       	pop	r28
 4d2:	1f 91       	pop	r17
 4d4:	0f 91       	pop	r16
 4d6:	08 95       	ret

000004d8 <vfprintf>:
 4d8:	2f 92       	push	r2
 4da:	3f 92       	push	r3
 4dc:	4f 92       	push	r4
 4de:	5f 92       	push	r5
 4e0:	6f 92       	push	r6
 4e2:	7f 92       	push	r7
 4e4:	8f 92       	push	r8
 4e6:	9f 92       	push	r9
 4e8:	af 92       	push	r10
 4ea:	bf 92       	push	r11
 4ec:	cf 92       	push	r12
 4ee:	df 92       	push	r13
 4f0:	ef 92       	push	r14
 4f2:	ff 92       	push	r15
 4f4:	0f 93       	push	r16
 4f6:	1f 93       	push	r17
 4f8:	cf 93       	push	r28
 4fa:	df 93       	push	r29
 4fc:	cd b7       	in	r28, 0x3d	; 61
 4fe:	de b7       	in	r29, 0x3e	; 62
 500:	2d 97       	sbiw	r28, 0x0d	; 13
 502:	0f b6       	in	r0, 0x3f	; 63
 504:	f8 94       	cli
 506:	de bf       	out	0x3e, r29	; 62
 508:	0f be       	out	0x3f, r0	; 63
 50a:	cd bf       	out	0x3d, r28	; 61
 50c:	3c 01       	movw	r6, r24
 50e:	7d 87       	std	Y+13, r23	; 0x0d
 510:	6c 87       	std	Y+12, r22	; 0x0c
 512:	5a 01       	movw	r10, r20
 514:	fc 01       	movw	r30, r24
 516:	17 82       	std	Z+7, r1	; 0x07
 518:	16 82       	std	Z+6, r1	; 0x06
 51a:	83 81       	ldd	r24, Z+3	; 0x03
 51c:	81 ff       	sbrs	r24, 1
 51e:	c8 c1       	rjmp	.+912    	; 0x8b0 <vfprintf+0x3d8>
 520:	2e 01       	movw	r4, r28
 522:	08 94       	sec
 524:	41 1c       	adc	r4, r1
 526:	51 1c       	adc	r5, r1
 528:	f3 01       	movw	r30, r6
 52a:	93 81       	ldd	r25, Z+3	; 0x03
 52c:	ec 85       	ldd	r30, Y+12	; 0x0c
 52e:	fd 85       	ldd	r31, Y+13	; 0x0d
 530:	93 fd       	sbrc	r25, 3
 532:	85 91       	lpm	r24, Z+
 534:	93 ff       	sbrs	r25, 3
 536:	81 91       	ld	r24, Z+
 538:	fd 87       	std	Y+13, r31	; 0x0d
 53a:	ec 87       	std	Y+12, r30	; 0x0c
 53c:	88 23       	and	r24, r24
 53e:	09 f4       	brne	.+2      	; 0x542 <vfprintf+0x6a>
 540:	b3 c1       	rjmp	.+870    	; 0x8a8 <vfprintf+0x3d0>
 542:	85 32       	cpi	r24, 0x25	; 37
 544:	41 f4       	brne	.+16     	; 0x556 <vfprintf+0x7e>
 546:	93 fd       	sbrc	r25, 3
 548:	85 91       	lpm	r24, Z+
 54a:	93 ff       	sbrs	r25, 3
 54c:	81 91       	ld	r24, Z+
 54e:	fd 87       	std	Y+13, r31	; 0x0d
 550:	ec 87       	std	Y+12, r30	; 0x0c
 552:	85 32       	cpi	r24, 0x25	; 37
 554:	29 f4       	brne	.+10     	; 0x560 <vfprintf+0x88>
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	b3 01       	movw	r22, r6
 55a:	0e 94 89 04 	call	0x912	; 0x912 <fputc>
 55e:	e4 cf       	rjmp	.-56     	; 0x528 <vfprintf+0x50>
 560:	ff 24       	eor	r15, r15
 562:	ee 24       	eor	r14, r14
 564:	10 e0       	ldi	r17, 0x00	; 0
 566:	10 32       	cpi	r17, 0x20	; 32
 568:	b0 f4       	brcc	.+44     	; 0x596 <vfprintf+0xbe>
 56a:	8b 32       	cpi	r24, 0x2B	; 43
 56c:	69 f0       	breq	.+26     	; 0x588 <vfprintf+0xb0>
 56e:	8c 32       	cpi	r24, 0x2C	; 44
 570:	28 f4       	brcc	.+10     	; 0x57c <vfprintf+0xa4>
 572:	80 32       	cpi	r24, 0x20	; 32
 574:	51 f0       	breq	.+20     	; 0x58a <vfprintf+0xb2>
 576:	83 32       	cpi	r24, 0x23	; 35
 578:	71 f4       	brne	.+28     	; 0x596 <vfprintf+0xbe>
 57a:	0b c0       	rjmp	.+22     	; 0x592 <vfprintf+0xba>
 57c:	8d 32       	cpi	r24, 0x2D	; 45
 57e:	39 f0       	breq	.+14     	; 0x58e <vfprintf+0xb6>
 580:	80 33       	cpi	r24, 0x30	; 48
 582:	49 f4       	brne	.+18     	; 0x596 <vfprintf+0xbe>
 584:	11 60       	ori	r17, 0x01	; 1
 586:	2c c0       	rjmp	.+88     	; 0x5e0 <vfprintf+0x108>
 588:	12 60       	ori	r17, 0x02	; 2
 58a:	14 60       	ori	r17, 0x04	; 4
 58c:	29 c0       	rjmp	.+82     	; 0x5e0 <vfprintf+0x108>
 58e:	18 60       	ori	r17, 0x08	; 8
 590:	27 c0       	rjmp	.+78     	; 0x5e0 <vfprintf+0x108>
 592:	10 61       	ori	r17, 0x10	; 16
 594:	25 c0       	rjmp	.+74     	; 0x5e0 <vfprintf+0x108>
 596:	17 fd       	sbrc	r17, 7
 598:	2e c0       	rjmp	.+92     	; 0x5f6 <vfprintf+0x11e>
 59a:	28 2f       	mov	r18, r24
 59c:	20 53       	subi	r18, 0x30	; 48
 59e:	2a 30       	cpi	r18, 0x0A	; 10
 5a0:	98 f4       	brcc	.+38     	; 0x5c8 <vfprintf+0xf0>
 5a2:	16 ff       	sbrs	r17, 6
 5a4:	08 c0       	rjmp	.+16     	; 0x5b6 <vfprintf+0xde>
 5a6:	8f 2d       	mov	r24, r15
 5a8:	88 0f       	add	r24, r24
 5aa:	f8 2e       	mov	r15, r24
 5ac:	ff 0c       	add	r15, r15
 5ae:	ff 0c       	add	r15, r15
 5b0:	f8 0e       	add	r15, r24
 5b2:	f2 0e       	add	r15, r18
 5b4:	15 c0       	rjmp	.+42     	; 0x5e0 <vfprintf+0x108>
 5b6:	8e 2d       	mov	r24, r14
 5b8:	88 0f       	add	r24, r24
 5ba:	e8 2e       	mov	r14, r24
 5bc:	ee 0c       	add	r14, r14
 5be:	ee 0c       	add	r14, r14
 5c0:	e8 0e       	add	r14, r24
 5c2:	e2 0e       	add	r14, r18
 5c4:	10 62       	ori	r17, 0x20	; 32
 5c6:	0c c0       	rjmp	.+24     	; 0x5e0 <vfprintf+0x108>
 5c8:	8e 32       	cpi	r24, 0x2E	; 46
 5ca:	21 f4       	brne	.+8      	; 0x5d4 <vfprintf+0xfc>
 5cc:	16 fd       	sbrc	r17, 6
 5ce:	6c c1       	rjmp	.+728    	; 0x8a8 <vfprintf+0x3d0>
 5d0:	10 64       	ori	r17, 0x40	; 64
 5d2:	06 c0       	rjmp	.+12     	; 0x5e0 <vfprintf+0x108>
 5d4:	8c 36       	cpi	r24, 0x6C	; 108
 5d6:	11 f4       	brne	.+4      	; 0x5dc <vfprintf+0x104>
 5d8:	10 68       	ori	r17, 0x80	; 128
 5da:	02 c0       	rjmp	.+4      	; 0x5e0 <vfprintf+0x108>
 5dc:	88 36       	cpi	r24, 0x68	; 104
 5de:	59 f4       	brne	.+22     	; 0x5f6 <vfprintf+0x11e>
 5e0:	ec 85       	ldd	r30, Y+12	; 0x0c
 5e2:	fd 85       	ldd	r31, Y+13	; 0x0d
 5e4:	93 fd       	sbrc	r25, 3
 5e6:	85 91       	lpm	r24, Z+
 5e8:	93 ff       	sbrs	r25, 3
 5ea:	81 91       	ld	r24, Z+
 5ec:	fd 87       	std	Y+13, r31	; 0x0d
 5ee:	ec 87       	std	Y+12, r30	; 0x0c
 5f0:	88 23       	and	r24, r24
 5f2:	09 f0       	breq	.+2      	; 0x5f6 <vfprintf+0x11e>
 5f4:	b8 cf       	rjmp	.-144    	; 0x566 <vfprintf+0x8e>
 5f6:	98 2f       	mov	r25, r24
 5f8:	95 54       	subi	r25, 0x45	; 69
 5fa:	93 30       	cpi	r25, 0x03	; 3
 5fc:	18 f0       	brcs	.+6      	; 0x604 <vfprintf+0x12c>
 5fe:	90 52       	subi	r25, 0x20	; 32
 600:	93 30       	cpi	r25, 0x03	; 3
 602:	38 f4       	brcc	.+14     	; 0x612 <vfprintf+0x13a>
 604:	24 e0       	ldi	r18, 0x04	; 4
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	a2 0e       	add	r10, r18
 60a:	b3 1e       	adc	r11, r19
 60c:	3f e3       	ldi	r19, 0x3F	; 63
 60e:	39 83       	std	Y+1, r19	; 0x01
 610:	0f c0       	rjmp	.+30     	; 0x630 <vfprintf+0x158>
 612:	83 36       	cpi	r24, 0x63	; 99
 614:	31 f0       	breq	.+12     	; 0x622 <vfprintf+0x14a>
 616:	83 37       	cpi	r24, 0x73	; 115
 618:	81 f0       	breq	.+32     	; 0x63a <vfprintf+0x162>
 61a:	83 35       	cpi	r24, 0x53	; 83
 61c:	09 f0       	breq	.+2      	; 0x620 <vfprintf+0x148>
 61e:	5a c0       	rjmp	.+180    	; 0x6d4 <vfprintf+0x1fc>
 620:	22 c0       	rjmp	.+68     	; 0x666 <vfprintf+0x18e>
 622:	f5 01       	movw	r30, r10
 624:	80 81       	ld	r24, Z
 626:	89 83       	std	Y+1, r24	; 0x01
 628:	22 e0       	ldi	r18, 0x02	; 2
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	a2 0e       	add	r10, r18
 62e:	b3 1e       	adc	r11, r19
 630:	21 e0       	ldi	r18, 0x01	; 1
 632:	c2 2e       	mov	r12, r18
 634:	d1 2c       	mov	r13, r1
 636:	42 01       	movw	r8, r4
 638:	14 c0       	rjmp	.+40     	; 0x662 <vfprintf+0x18a>
 63a:	92 e0       	ldi	r25, 0x02	; 2
 63c:	29 2e       	mov	r2, r25
 63e:	31 2c       	mov	r3, r1
 640:	2a 0c       	add	r2, r10
 642:	3b 1c       	adc	r3, r11
 644:	f5 01       	movw	r30, r10
 646:	80 80       	ld	r8, Z
 648:	91 80       	ldd	r9, Z+1	; 0x01
 64a:	16 ff       	sbrs	r17, 6
 64c:	03 c0       	rjmp	.+6      	; 0x654 <vfprintf+0x17c>
 64e:	6f 2d       	mov	r22, r15
 650:	70 e0       	ldi	r23, 0x00	; 0
 652:	02 c0       	rjmp	.+4      	; 0x658 <vfprintf+0x180>
 654:	6f ef       	ldi	r22, 0xFF	; 255
 656:	7f ef       	ldi	r23, 0xFF	; 255
 658:	c4 01       	movw	r24, r8
 65a:	0e 94 7e 04 	call	0x8fc	; 0x8fc <strnlen>
 65e:	6c 01       	movw	r12, r24
 660:	51 01       	movw	r10, r2
 662:	1f 77       	andi	r17, 0x7F	; 127
 664:	15 c0       	rjmp	.+42     	; 0x690 <vfprintf+0x1b8>
 666:	82 e0       	ldi	r24, 0x02	; 2
 668:	28 2e       	mov	r2, r24
 66a:	31 2c       	mov	r3, r1
 66c:	2a 0c       	add	r2, r10
 66e:	3b 1c       	adc	r3, r11
 670:	f5 01       	movw	r30, r10
 672:	80 80       	ld	r8, Z
 674:	91 80       	ldd	r9, Z+1	; 0x01
 676:	16 ff       	sbrs	r17, 6
 678:	03 c0       	rjmp	.+6      	; 0x680 <vfprintf+0x1a8>
 67a:	6f 2d       	mov	r22, r15
 67c:	70 e0       	ldi	r23, 0x00	; 0
 67e:	02 c0       	rjmp	.+4      	; 0x684 <vfprintf+0x1ac>
 680:	6f ef       	ldi	r22, 0xFF	; 255
 682:	7f ef       	ldi	r23, 0xFF	; 255
 684:	c4 01       	movw	r24, r8
 686:	0e 94 73 04 	call	0x8e6	; 0x8e6 <strnlen_P>
 68a:	6c 01       	movw	r12, r24
 68c:	10 68       	ori	r17, 0x80	; 128
 68e:	51 01       	movw	r10, r2
 690:	13 fd       	sbrc	r17, 3
 692:	1c c0       	rjmp	.+56     	; 0x6cc <vfprintf+0x1f4>
 694:	06 c0       	rjmp	.+12     	; 0x6a2 <vfprintf+0x1ca>
 696:	80 e2       	ldi	r24, 0x20	; 32
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	b3 01       	movw	r22, r6
 69c:	0e 94 89 04 	call	0x912	; 0x912 <fputc>
 6a0:	ea 94       	dec	r14
 6a2:	8e 2d       	mov	r24, r14
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	c8 16       	cp	r12, r24
 6a8:	d9 06       	cpc	r13, r25
 6aa:	a8 f3       	brcs	.-22     	; 0x696 <vfprintf+0x1be>
 6ac:	0f c0       	rjmp	.+30     	; 0x6cc <vfprintf+0x1f4>
 6ae:	f4 01       	movw	r30, r8
 6b0:	17 fd       	sbrc	r17, 7
 6b2:	85 91       	lpm	r24, Z+
 6b4:	17 ff       	sbrs	r17, 7
 6b6:	81 91       	ld	r24, Z+
 6b8:	4f 01       	movw	r8, r30
 6ba:	90 e0       	ldi	r25, 0x00	; 0
 6bc:	b3 01       	movw	r22, r6
 6be:	0e 94 89 04 	call	0x912	; 0x912 <fputc>
 6c2:	e1 10       	cpse	r14, r1
 6c4:	ea 94       	dec	r14
 6c6:	08 94       	sec
 6c8:	c1 08       	sbc	r12, r1
 6ca:	d1 08       	sbc	r13, r1
 6cc:	c1 14       	cp	r12, r1
 6ce:	d1 04       	cpc	r13, r1
 6d0:	71 f7       	brne	.-36     	; 0x6ae <vfprintf+0x1d6>
 6d2:	e7 c0       	rjmp	.+462    	; 0x8a2 <vfprintf+0x3ca>
 6d4:	84 36       	cpi	r24, 0x64	; 100
 6d6:	11 f0       	breq	.+4      	; 0x6dc <vfprintf+0x204>
 6d8:	89 36       	cpi	r24, 0x69	; 105
 6da:	51 f5       	brne	.+84     	; 0x730 <vfprintf+0x258>
 6dc:	f5 01       	movw	r30, r10
 6de:	17 ff       	sbrs	r17, 7
 6e0:	07 c0       	rjmp	.+14     	; 0x6f0 <vfprintf+0x218>
 6e2:	80 81       	ld	r24, Z
 6e4:	91 81       	ldd	r25, Z+1	; 0x01
 6e6:	a2 81       	ldd	r26, Z+2	; 0x02
 6e8:	b3 81       	ldd	r27, Z+3	; 0x03
 6ea:	24 e0       	ldi	r18, 0x04	; 4
 6ec:	30 e0       	ldi	r19, 0x00	; 0
 6ee:	08 c0       	rjmp	.+16     	; 0x700 <vfprintf+0x228>
 6f0:	80 81       	ld	r24, Z
 6f2:	91 81       	ldd	r25, Z+1	; 0x01
 6f4:	aa 27       	eor	r26, r26
 6f6:	97 fd       	sbrc	r25, 7
 6f8:	a0 95       	com	r26
 6fa:	ba 2f       	mov	r27, r26
 6fc:	22 e0       	ldi	r18, 0x02	; 2
 6fe:	30 e0       	ldi	r19, 0x00	; 0
 700:	a2 0e       	add	r10, r18
 702:	b3 1e       	adc	r11, r19
 704:	01 2f       	mov	r16, r17
 706:	0f 76       	andi	r16, 0x6F	; 111
 708:	b7 ff       	sbrs	r27, 7
 70a:	08 c0       	rjmp	.+16     	; 0x71c <vfprintf+0x244>
 70c:	b0 95       	com	r27
 70e:	a0 95       	com	r26
 710:	90 95       	com	r25
 712:	81 95       	neg	r24
 714:	9f 4f       	sbci	r25, 0xFF	; 255
 716:	af 4f       	sbci	r26, 0xFF	; 255
 718:	bf 4f       	sbci	r27, 0xFF	; 255
 71a:	00 68       	ori	r16, 0x80	; 128
 71c:	bc 01       	movw	r22, r24
 71e:	cd 01       	movw	r24, r26
 720:	a2 01       	movw	r20, r4
 722:	2a e0       	ldi	r18, 0x0A	; 10
 724:	30 e0       	ldi	r19, 0x00	; 0
 726:	0e 94 b5 04 	call	0x96a	; 0x96a <__ultoa_invert>
 72a:	d8 2e       	mov	r13, r24
 72c:	d4 18       	sub	r13, r4
 72e:	3f c0       	rjmp	.+126    	; 0x7ae <vfprintf+0x2d6>
 730:	85 37       	cpi	r24, 0x75	; 117
 732:	21 f4       	brne	.+8      	; 0x73c <vfprintf+0x264>
 734:	1f 7e       	andi	r17, 0xEF	; 239
 736:	2a e0       	ldi	r18, 0x0A	; 10
 738:	30 e0       	ldi	r19, 0x00	; 0
 73a:	20 c0       	rjmp	.+64     	; 0x77c <vfprintf+0x2a4>
 73c:	19 7f       	andi	r17, 0xF9	; 249
 73e:	8f 36       	cpi	r24, 0x6F	; 111
 740:	a9 f0       	breq	.+42     	; 0x76c <vfprintf+0x294>
 742:	80 37       	cpi	r24, 0x70	; 112
 744:	20 f4       	brcc	.+8      	; 0x74e <vfprintf+0x276>
 746:	88 35       	cpi	r24, 0x58	; 88
 748:	09 f0       	breq	.+2      	; 0x74c <vfprintf+0x274>
 74a:	ae c0       	rjmp	.+348    	; 0x8a8 <vfprintf+0x3d0>
 74c:	0b c0       	rjmp	.+22     	; 0x764 <vfprintf+0x28c>
 74e:	80 37       	cpi	r24, 0x70	; 112
 750:	21 f0       	breq	.+8      	; 0x75a <vfprintf+0x282>
 752:	88 37       	cpi	r24, 0x78	; 120
 754:	09 f0       	breq	.+2      	; 0x758 <vfprintf+0x280>
 756:	a8 c0       	rjmp	.+336    	; 0x8a8 <vfprintf+0x3d0>
 758:	01 c0       	rjmp	.+2      	; 0x75c <vfprintf+0x284>
 75a:	10 61       	ori	r17, 0x10	; 16
 75c:	14 ff       	sbrs	r17, 4
 75e:	09 c0       	rjmp	.+18     	; 0x772 <vfprintf+0x29a>
 760:	14 60       	ori	r17, 0x04	; 4
 762:	07 c0       	rjmp	.+14     	; 0x772 <vfprintf+0x29a>
 764:	14 ff       	sbrs	r17, 4
 766:	08 c0       	rjmp	.+16     	; 0x778 <vfprintf+0x2a0>
 768:	16 60       	ori	r17, 0x06	; 6
 76a:	06 c0       	rjmp	.+12     	; 0x778 <vfprintf+0x2a0>
 76c:	28 e0       	ldi	r18, 0x08	; 8
 76e:	30 e0       	ldi	r19, 0x00	; 0
 770:	05 c0       	rjmp	.+10     	; 0x77c <vfprintf+0x2a4>
 772:	20 e1       	ldi	r18, 0x10	; 16
 774:	30 e0       	ldi	r19, 0x00	; 0
 776:	02 c0       	rjmp	.+4      	; 0x77c <vfprintf+0x2a4>
 778:	20 e1       	ldi	r18, 0x10	; 16
 77a:	32 e0       	ldi	r19, 0x02	; 2
 77c:	f5 01       	movw	r30, r10
 77e:	17 ff       	sbrs	r17, 7
 780:	07 c0       	rjmp	.+14     	; 0x790 <vfprintf+0x2b8>
 782:	60 81       	ld	r22, Z
 784:	71 81       	ldd	r23, Z+1	; 0x01
 786:	82 81       	ldd	r24, Z+2	; 0x02
 788:	93 81       	ldd	r25, Z+3	; 0x03
 78a:	44 e0       	ldi	r20, 0x04	; 4
 78c:	50 e0       	ldi	r21, 0x00	; 0
 78e:	06 c0       	rjmp	.+12     	; 0x79c <vfprintf+0x2c4>
 790:	60 81       	ld	r22, Z
 792:	71 81       	ldd	r23, Z+1	; 0x01
 794:	80 e0       	ldi	r24, 0x00	; 0
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	42 e0       	ldi	r20, 0x02	; 2
 79a:	50 e0       	ldi	r21, 0x00	; 0
 79c:	a4 0e       	add	r10, r20
 79e:	b5 1e       	adc	r11, r21
 7a0:	a2 01       	movw	r20, r4
 7a2:	0e 94 b5 04 	call	0x96a	; 0x96a <__ultoa_invert>
 7a6:	d8 2e       	mov	r13, r24
 7a8:	d4 18       	sub	r13, r4
 7aa:	01 2f       	mov	r16, r17
 7ac:	0f 77       	andi	r16, 0x7F	; 127
 7ae:	06 ff       	sbrs	r16, 6
 7b0:	09 c0       	rjmp	.+18     	; 0x7c4 <vfprintf+0x2ec>
 7b2:	0e 7f       	andi	r16, 0xFE	; 254
 7b4:	df 14       	cp	r13, r15
 7b6:	30 f4       	brcc	.+12     	; 0x7c4 <vfprintf+0x2ec>
 7b8:	04 ff       	sbrs	r16, 4
 7ba:	06 c0       	rjmp	.+12     	; 0x7c8 <vfprintf+0x2f0>
 7bc:	02 fd       	sbrc	r16, 2
 7be:	04 c0       	rjmp	.+8      	; 0x7c8 <vfprintf+0x2f0>
 7c0:	0f 7e       	andi	r16, 0xEF	; 239
 7c2:	02 c0       	rjmp	.+4      	; 0x7c8 <vfprintf+0x2f0>
 7c4:	1d 2d       	mov	r17, r13
 7c6:	01 c0       	rjmp	.+2      	; 0x7ca <vfprintf+0x2f2>
 7c8:	1f 2d       	mov	r17, r15
 7ca:	80 2f       	mov	r24, r16
 7cc:	90 e0       	ldi	r25, 0x00	; 0
 7ce:	04 ff       	sbrs	r16, 4
 7d0:	0c c0       	rjmp	.+24     	; 0x7ea <vfprintf+0x312>
 7d2:	fe 01       	movw	r30, r28
 7d4:	ed 0d       	add	r30, r13
 7d6:	f1 1d       	adc	r31, r1
 7d8:	20 81       	ld	r18, Z
 7da:	20 33       	cpi	r18, 0x30	; 48
 7dc:	11 f4       	brne	.+4      	; 0x7e2 <vfprintf+0x30a>
 7de:	09 7e       	andi	r16, 0xE9	; 233
 7e0:	09 c0       	rjmp	.+18     	; 0x7f4 <vfprintf+0x31c>
 7e2:	02 ff       	sbrs	r16, 2
 7e4:	06 c0       	rjmp	.+12     	; 0x7f2 <vfprintf+0x31a>
 7e6:	1e 5f       	subi	r17, 0xFE	; 254
 7e8:	05 c0       	rjmp	.+10     	; 0x7f4 <vfprintf+0x31c>
 7ea:	86 78       	andi	r24, 0x86	; 134
 7ec:	90 70       	andi	r25, 0x00	; 0
 7ee:	00 97       	sbiw	r24, 0x00	; 0
 7f0:	09 f0       	breq	.+2      	; 0x7f4 <vfprintf+0x31c>
 7f2:	1f 5f       	subi	r17, 0xFF	; 255
 7f4:	80 2e       	mov	r8, r16
 7f6:	99 24       	eor	r9, r9
 7f8:	03 fd       	sbrc	r16, 3
 7fa:	12 c0       	rjmp	.+36     	; 0x820 <vfprintf+0x348>
 7fc:	00 ff       	sbrs	r16, 0
 7fe:	0d c0       	rjmp	.+26     	; 0x81a <vfprintf+0x342>
 800:	fd 2c       	mov	r15, r13
 802:	1e 15       	cp	r17, r14
 804:	50 f4       	brcc	.+20     	; 0x81a <vfprintf+0x342>
 806:	fe 0c       	add	r15, r14
 808:	f1 1a       	sub	r15, r17
 80a:	1e 2d       	mov	r17, r14
 80c:	06 c0       	rjmp	.+12     	; 0x81a <vfprintf+0x342>
 80e:	80 e2       	ldi	r24, 0x20	; 32
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	b3 01       	movw	r22, r6
 814:	0e 94 89 04 	call	0x912	; 0x912 <fputc>
 818:	1f 5f       	subi	r17, 0xFF	; 255
 81a:	1e 15       	cp	r17, r14
 81c:	c0 f3       	brcs	.-16     	; 0x80e <vfprintf+0x336>
 81e:	04 c0       	rjmp	.+8      	; 0x828 <vfprintf+0x350>
 820:	1e 15       	cp	r17, r14
 822:	10 f4       	brcc	.+4      	; 0x828 <vfprintf+0x350>
 824:	e1 1a       	sub	r14, r17
 826:	01 c0       	rjmp	.+2      	; 0x82a <vfprintf+0x352>
 828:	ee 24       	eor	r14, r14
 82a:	84 fe       	sbrs	r8, 4
 82c:	0f c0       	rjmp	.+30     	; 0x84c <vfprintf+0x374>
 82e:	80 e3       	ldi	r24, 0x30	; 48
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	b3 01       	movw	r22, r6
 834:	0e 94 89 04 	call	0x912	; 0x912 <fputc>
 838:	82 fe       	sbrs	r8, 2
 83a:	1f c0       	rjmp	.+62     	; 0x87a <vfprintf+0x3a2>
 83c:	81 fe       	sbrs	r8, 1
 83e:	03 c0       	rjmp	.+6      	; 0x846 <vfprintf+0x36e>
 840:	88 e5       	ldi	r24, 0x58	; 88
 842:	90 e0       	ldi	r25, 0x00	; 0
 844:	10 c0       	rjmp	.+32     	; 0x866 <vfprintf+0x38e>
 846:	88 e7       	ldi	r24, 0x78	; 120
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	0d c0       	rjmp	.+26     	; 0x866 <vfprintf+0x38e>
 84c:	c4 01       	movw	r24, r8
 84e:	86 78       	andi	r24, 0x86	; 134
 850:	90 70       	andi	r25, 0x00	; 0
 852:	00 97       	sbiw	r24, 0x00	; 0
 854:	91 f0       	breq	.+36     	; 0x87a <vfprintf+0x3a2>
 856:	81 fc       	sbrc	r8, 1
 858:	02 c0       	rjmp	.+4      	; 0x85e <vfprintf+0x386>
 85a:	80 e2       	ldi	r24, 0x20	; 32
 85c:	01 c0       	rjmp	.+2      	; 0x860 <vfprintf+0x388>
 85e:	8b e2       	ldi	r24, 0x2B	; 43
 860:	07 fd       	sbrc	r16, 7
 862:	8d e2       	ldi	r24, 0x2D	; 45
 864:	90 e0       	ldi	r25, 0x00	; 0
 866:	b3 01       	movw	r22, r6
 868:	0e 94 89 04 	call	0x912	; 0x912 <fputc>
 86c:	06 c0       	rjmp	.+12     	; 0x87a <vfprintf+0x3a2>
 86e:	80 e3       	ldi	r24, 0x30	; 48
 870:	90 e0       	ldi	r25, 0x00	; 0
 872:	b3 01       	movw	r22, r6
 874:	0e 94 89 04 	call	0x912	; 0x912 <fputc>
 878:	fa 94       	dec	r15
 87a:	df 14       	cp	r13, r15
 87c:	c0 f3       	brcs	.-16     	; 0x86e <vfprintf+0x396>
 87e:	da 94       	dec	r13
 880:	f2 01       	movw	r30, r4
 882:	ed 0d       	add	r30, r13
 884:	f1 1d       	adc	r31, r1
 886:	80 81       	ld	r24, Z
 888:	90 e0       	ldi	r25, 0x00	; 0
 88a:	b3 01       	movw	r22, r6
 88c:	0e 94 89 04 	call	0x912	; 0x912 <fputc>
 890:	dd 20       	and	r13, r13
 892:	a9 f7       	brne	.-22     	; 0x87e <vfprintf+0x3a6>
 894:	06 c0       	rjmp	.+12     	; 0x8a2 <vfprintf+0x3ca>
 896:	80 e2       	ldi	r24, 0x20	; 32
 898:	90 e0       	ldi	r25, 0x00	; 0
 89a:	b3 01       	movw	r22, r6
 89c:	0e 94 89 04 	call	0x912	; 0x912 <fputc>
 8a0:	ea 94       	dec	r14
 8a2:	ee 20       	and	r14, r14
 8a4:	c1 f7       	brne	.-16     	; 0x896 <vfprintf+0x3be>
 8a6:	40 ce       	rjmp	.-896    	; 0x528 <vfprintf+0x50>
 8a8:	f3 01       	movw	r30, r6
 8aa:	86 81       	ldd	r24, Z+6	; 0x06
 8ac:	97 81       	ldd	r25, Z+7	; 0x07
 8ae:	02 c0       	rjmp	.+4      	; 0x8b4 <vfprintf+0x3dc>
 8b0:	8f ef       	ldi	r24, 0xFF	; 255
 8b2:	9f ef       	ldi	r25, 0xFF	; 255
 8b4:	2d 96       	adiw	r28, 0x0d	; 13
 8b6:	0f b6       	in	r0, 0x3f	; 63
 8b8:	f8 94       	cli
 8ba:	de bf       	out	0x3e, r29	; 62
 8bc:	0f be       	out	0x3f, r0	; 63
 8be:	cd bf       	out	0x3d, r28	; 61
 8c0:	df 91       	pop	r29
 8c2:	cf 91       	pop	r28
 8c4:	1f 91       	pop	r17
 8c6:	0f 91       	pop	r16
 8c8:	ff 90       	pop	r15
 8ca:	ef 90       	pop	r14
 8cc:	df 90       	pop	r13
 8ce:	cf 90       	pop	r12
 8d0:	bf 90       	pop	r11
 8d2:	af 90       	pop	r10
 8d4:	9f 90       	pop	r9
 8d6:	8f 90       	pop	r8
 8d8:	7f 90       	pop	r7
 8da:	6f 90       	pop	r6
 8dc:	5f 90       	pop	r5
 8de:	4f 90       	pop	r4
 8e0:	3f 90       	pop	r3
 8e2:	2f 90       	pop	r2
 8e4:	08 95       	ret

000008e6 <strnlen_P>:
 8e6:	fc 01       	movw	r30, r24
 8e8:	05 90       	lpm	r0, Z+
 8ea:	61 50       	subi	r22, 0x01	; 1
 8ec:	70 40       	sbci	r23, 0x00	; 0
 8ee:	01 10       	cpse	r0, r1
 8f0:	d8 f7       	brcc	.-10     	; 0x8e8 <strnlen_P+0x2>
 8f2:	80 95       	com	r24
 8f4:	90 95       	com	r25
 8f6:	8e 0f       	add	r24, r30
 8f8:	9f 1f       	adc	r25, r31
 8fa:	08 95       	ret

000008fc <strnlen>:
 8fc:	fc 01       	movw	r30, r24
 8fe:	61 50       	subi	r22, 0x01	; 1
 900:	70 40       	sbci	r23, 0x00	; 0
 902:	01 90       	ld	r0, Z+
 904:	01 10       	cpse	r0, r1
 906:	d8 f7       	brcc	.-10     	; 0x8fe <strnlen+0x2>
 908:	80 95       	com	r24
 90a:	90 95       	com	r25
 90c:	8e 0f       	add	r24, r30
 90e:	9f 1f       	adc	r25, r31
 910:	08 95       	ret

00000912 <fputc>:
 912:	0f 93       	push	r16
 914:	1f 93       	push	r17
 916:	cf 93       	push	r28
 918:	df 93       	push	r29
 91a:	8c 01       	movw	r16, r24
 91c:	eb 01       	movw	r28, r22
 91e:	8b 81       	ldd	r24, Y+3	; 0x03
 920:	81 ff       	sbrs	r24, 1
 922:	1b c0       	rjmp	.+54     	; 0x95a <fputc+0x48>
 924:	82 ff       	sbrs	r24, 2
 926:	0d c0       	rjmp	.+26     	; 0x942 <fputc+0x30>
 928:	2e 81       	ldd	r18, Y+6	; 0x06
 92a:	3f 81       	ldd	r19, Y+7	; 0x07
 92c:	8c 81       	ldd	r24, Y+4	; 0x04
 92e:	9d 81       	ldd	r25, Y+5	; 0x05
 930:	28 17       	cp	r18, r24
 932:	39 07       	cpc	r19, r25
 934:	64 f4       	brge	.+24     	; 0x94e <fputc+0x3c>
 936:	e8 81       	ld	r30, Y
 938:	f9 81       	ldd	r31, Y+1	; 0x01
 93a:	01 93       	st	Z+, r16
 93c:	f9 83       	std	Y+1, r31	; 0x01
 93e:	e8 83       	st	Y, r30
 940:	06 c0       	rjmp	.+12     	; 0x94e <fputc+0x3c>
 942:	e8 85       	ldd	r30, Y+8	; 0x08
 944:	f9 85       	ldd	r31, Y+9	; 0x09
 946:	80 2f       	mov	r24, r16
 948:	09 95       	icall
 94a:	00 97       	sbiw	r24, 0x00	; 0
 94c:	31 f4       	brne	.+12     	; 0x95a <fputc+0x48>
 94e:	8e 81       	ldd	r24, Y+6	; 0x06
 950:	9f 81       	ldd	r25, Y+7	; 0x07
 952:	01 96       	adiw	r24, 0x01	; 1
 954:	9f 83       	std	Y+7, r25	; 0x07
 956:	8e 83       	std	Y+6, r24	; 0x06
 958:	02 c0       	rjmp	.+4      	; 0x95e <fputc+0x4c>
 95a:	0f ef       	ldi	r16, 0xFF	; 255
 95c:	1f ef       	ldi	r17, 0xFF	; 255
 95e:	c8 01       	movw	r24, r16
 960:	df 91       	pop	r29
 962:	cf 91       	pop	r28
 964:	1f 91       	pop	r17
 966:	0f 91       	pop	r16
 968:	08 95       	ret

0000096a <__ultoa_invert>:
 96a:	fa 01       	movw	r30, r20
 96c:	aa 27       	eor	r26, r26
 96e:	28 30       	cpi	r18, 0x08	; 8
 970:	51 f1       	breq	.+84     	; 0x9c6 <__ultoa_invert+0x5c>
 972:	20 31       	cpi	r18, 0x10	; 16
 974:	81 f1       	breq	.+96     	; 0x9d6 <__ultoa_invert+0x6c>
 976:	e8 94       	clt
 978:	6f 93       	push	r22
 97a:	6e 7f       	andi	r22, 0xFE	; 254
 97c:	6e 5f       	subi	r22, 0xFE	; 254
 97e:	7f 4f       	sbci	r23, 0xFF	; 255
 980:	8f 4f       	sbci	r24, 0xFF	; 255
 982:	9f 4f       	sbci	r25, 0xFF	; 255
 984:	af 4f       	sbci	r26, 0xFF	; 255
 986:	b1 e0       	ldi	r27, 0x01	; 1
 988:	3e d0       	rcall	.+124    	; 0xa06 <__ultoa_invert+0x9c>
 98a:	b4 e0       	ldi	r27, 0x04	; 4
 98c:	3c d0       	rcall	.+120    	; 0xa06 <__ultoa_invert+0x9c>
 98e:	67 0f       	add	r22, r23
 990:	78 1f       	adc	r23, r24
 992:	89 1f       	adc	r24, r25
 994:	9a 1f       	adc	r25, r26
 996:	a1 1d       	adc	r26, r1
 998:	68 0f       	add	r22, r24
 99a:	79 1f       	adc	r23, r25
 99c:	8a 1f       	adc	r24, r26
 99e:	91 1d       	adc	r25, r1
 9a0:	a1 1d       	adc	r26, r1
 9a2:	6a 0f       	add	r22, r26
 9a4:	71 1d       	adc	r23, r1
 9a6:	81 1d       	adc	r24, r1
 9a8:	91 1d       	adc	r25, r1
 9aa:	a1 1d       	adc	r26, r1
 9ac:	20 d0       	rcall	.+64     	; 0x9ee <__ultoa_invert+0x84>
 9ae:	09 f4       	brne	.+2      	; 0x9b2 <__ultoa_invert+0x48>
 9b0:	68 94       	set
 9b2:	3f 91       	pop	r19
 9b4:	2a e0       	ldi	r18, 0x0A	; 10
 9b6:	26 9f       	mul	r18, r22
 9b8:	11 24       	eor	r1, r1
 9ba:	30 19       	sub	r19, r0
 9bc:	30 5d       	subi	r19, 0xD0	; 208
 9be:	31 93       	st	Z+, r19
 9c0:	de f6       	brtc	.-74     	; 0x978 <__ultoa_invert+0xe>
 9c2:	cf 01       	movw	r24, r30
 9c4:	08 95       	ret
 9c6:	46 2f       	mov	r20, r22
 9c8:	47 70       	andi	r20, 0x07	; 7
 9ca:	40 5d       	subi	r20, 0xD0	; 208
 9cc:	41 93       	st	Z+, r20
 9ce:	b3 e0       	ldi	r27, 0x03	; 3
 9d0:	0f d0       	rcall	.+30     	; 0x9f0 <__ultoa_invert+0x86>
 9d2:	c9 f7       	brne	.-14     	; 0x9c6 <__ultoa_invert+0x5c>
 9d4:	f6 cf       	rjmp	.-20     	; 0x9c2 <__ultoa_invert+0x58>
 9d6:	46 2f       	mov	r20, r22
 9d8:	4f 70       	andi	r20, 0x0F	; 15
 9da:	40 5d       	subi	r20, 0xD0	; 208
 9dc:	4a 33       	cpi	r20, 0x3A	; 58
 9de:	18 f0       	brcs	.+6      	; 0x9e6 <__ultoa_invert+0x7c>
 9e0:	49 5d       	subi	r20, 0xD9	; 217
 9e2:	31 fd       	sbrc	r19, 1
 9e4:	40 52       	subi	r20, 0x20	; 32
 9e6:	41 93       	st	Z+, r20
 9e8:	02 d0       	rcall	.+4      	; 0x9ee <__ultoa_invert+0x84>
 9ea:	a9 f7       	brne	.-22     	; 0x9d6 <__ultoa_invert+0x6c>
 9ec:	ea cf       	rjmp	.-44     	; 0x9c2 <__ultoa_invert+0x58>
 9ee:	b4 e0       	ldi	r27, 0x04	; 4
 9f0:	a6 95       	lsr	r26
 9f2:	97 95       	ror	r25
 9f4:	87 95       	ror	r24
 9f6:	77 95       	ror	r23
 9f8:	67 95       	ror	r22
 9fa:	ba 95       	dec	r27
 9fc:	c9 f7       	brne	.-14     	; 0x9f0 <__ultoa_invert+0x86>
 9fe:	00 97       	sbiw	r24, 0x00	; 0
 a00:	61 05       	cpc	r22, r1
 a02:	71 05       	cpc	r23, r1
 a04:	08 95       	ret
 a06:	9b 01       	movw	r18, r22
 a08:	ac 01       	movw	r20, r24
 a0a:	0a 2e       	mov	r0, r26
 a0c:	06 94       	lsr	r0
 a0e:	57 95       	ror	r21
 a10:	47 95       	ror	r20
 a12:	37 95       	ror	r19
 a14:	27 95       	ror	r18
 a16:	ba 95       	dec	r27
 a18:	c9 f7       	brne	.-14     	; 0xa0c <__ultoa_invert+0xa2>
 a1a:	62 0f       	add	r22, r18
 a1c:	73 1f       	adc	r23, r19
 a1e:	84 1f       	adc	r24, r20
 a20:	95 1f       	adc	r25, r21
 a22:	a0 1d       	adc	r26, r0
 a24:	08 95       	ret

00000a26 <_exit>:
 a26:	f8 94       	cli

00000a28 <__stop_program>:
 a28:	ff cf       	rjmp	.-2      	; 0xa28 <__stop_program>
