
CAN_NODE1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000064  00800100  000011c4  00001258  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003f  00800164  00800164  000012bc  2**0
                  ALLOC
  3 .stab         00000c84  00000000  00000000  000012bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  00001f40  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000168  00000000  00000000  000020f8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001391  00000000  00000000  00002260  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007db  00000000  00000000  000035f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ba3  00000000  00000000  00003dcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003cc  00000000  00000000  00004970  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000499  00000000  00000000  00004d3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001188  00000000  00000000  000051d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  0000635d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4a 00 	jmp	0x94	; 0x94 <__ctors_end>
       4:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
       8:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
       c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      10:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      14:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      18:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      1c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      20:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      24:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      28:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      2c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      30:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      34:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      38:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      3c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      40:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      44:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      48:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      4c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      50:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      54:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      58:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      5c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      60:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      64:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__vector_25>
      68:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      6c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      70:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      74:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      78:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      7c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      80:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      84:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      88:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      8c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      90:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>

00000094 <__ctors_end>:
      94:	11 24       	eor	r1, r1
      96:	1f be       	out	0x3f, r1	; 63
      98:	cf ef       	ldi	r28, 0xFF	; 255
      9a:	d0 e1       	ldi	r29, 0x10	; 16
      9c:	de bf       	out	0x3e, r29	; 62
      9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
      a0:	11 e0       	ldi	r17, 0x01	; 1
      a2:	a0 e0       	ldi	r26, 0x00	; 0
      a4:	b1 e0       	ldi	r27, 0x01	; 1
      a6:	e4 ec       	ldi	r30, 0xC4	; 196
      a8:	f1 e1       	ldi	r31, 0x11	; 17
      aa:	00 e0       	ldi	r16, 0x00	; 0
      ac:	0b bf       	out	0x3b, r16	; 59
      ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
      b0:	07 90       	elpm	r0, Z+
      b2:	0d 92       	st	X+, r0
      b4:	a4 36       	cpi	r26, 0x64	; 100
      b6:	b1 07       	cpc	r27, r17
      b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
      ba:	11 e0       	ldi	r17, 0x01	; 1
      bc:	a4 e6       	ldi	r26, 0x64	; 100
      be:	b1 e0       	ldi	r27, 0x01	; 1
      c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
      c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
      c4:	a3 3a       	cpi	r26, 0xA3	; 163
      c6:	b1 07       	cpc	r27, r17
      c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
      ca:	0e 94 ef 04 	call	0x9de	; 0x9de <main>
      ce:	0c 94 e0 08 	jmp	0x11c0	; 0x11c0 <_exit>

000000d2 <__bad_interrupt>:
      d2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d6 <initAdc>:
// PF0: ADC0 조이스틱 y축 
// PF1: ADC1 조이스틱 x축
//=========================================================

void initAdc(void){
   ADMUX =  0x40;  // 기준전압; 외부 캐퍼시터 가진 AVcc(AREF 핀)
      d6:	80 e4       	ldi	r24, 0x40	; 64
      d8:	80 93 7c 00 	sts	0x007C, r24
               // AD변환 데이터 정렬; 오른쪽 정렬 
               // AD변환 채널 선택; PortF 0 핀    

   DDRF  = 0xf0;   // PortF[3..0] 입력으로 설정, PortF[7..4] 출력으로 설정 
      dc:	80 ef       	ldi	r24, 0xF0	; 240
      de:	80 bb       	out	0x10, r24	; 16
   DIDR0 = 0x0f;   // 디지털 입력 불가 PortF[3..0]
      e0:	8f e0       	ldi	r24, 0x0F	; 15
      e2:	80 93 7e 00 	sts	0x007E, r24

   ADCSRA= 0xc8;     // ADC 인에이블, ADC 변환 시작, ADC인터럽트 인에이블 
      e6:	88 ec       	ldi	r24, 0xC8	; 200
      e8:	80 93 7a 00 	sts	0x007A, r24
               // ADC 클럭 설정; XTAL의1/2(8MHz)
}
      ec:	08 95       	ret

000000ee <usart1_init>:

void usart1_init(void)
{
	UCSR1A=	0x00; // serial states clear
      ee:	10 92 c8 00 	sts	0x00C8, r1

	UCSR1B=	0x98; // 수신완료INT, 수신, 송신 인에이블 
      f2:	88 e9       	ldi	r24, 0x98	; 152
      f4:	80 93 c9 00 	sts	0x00C9, r24

	UCSR1C=	0x06; // stop bit; 0, no parity, 8bits set
      f8:	86 e0       	ldi	r24, 0x06	; 6
      fa:	80 93 ca 00 	sts	0x00CA, r24

	UBRR1H=	0x00; // 16MHz 9600bps set
      fe:	10 92 cd 00 	sts	0x00CD, r1

	UBRR1L=	103;  // 16MHz 9600bps set
     102:	87 e6       	ldi	r24, 0x67	; 103
     104:	80 93 cc 00 	sts	0x00CC, r24
}
     108:	08 95       	ret

0000010a <usart1_receive>:

unsigned char usart1_receive( void )
{
	/* Wait for incomming data */
	while ( !(UCSR1A & (1<<RXC1)) );			                
     10a:	80 91 c8 00 	lds	r24, 0x00C8
     10e:	87 ff       	sbrs	r24, 7
     110:	fc cf       	rjmp	.-8      	; 0x10a <usart1_receive>
	/* Return the data */
	return UDR1;
     112:	80 91 ce 00 	lds	r24, 0x00CE
}
     116:	08 95       	ret

00000118 <usart1_transmit>:
USART 통신 함수 제공. BUT 보고서에 원리 및 이해한 내용 첨부
***********************************************************/
void usart1_transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !(UCSR1A & (1<<UDRE1)) ); 			                
     118:	90 91 c8 00 	lds	r25, 0x00C8
     11c:	95 ff       	sbrs	r25, 5
     11e:	fc cf       	rjmp	.-8      	; 0x118 <usart1_transmit>
	/* Start transmittion */
	UDR1 = data; 			        
     120:	80 93 ce 00 	sts	0x00CE, r24
}
     124:	08 95       	ret

00000126 <usart1_transmit_string>:

void usart1_transmit_string(char* p)
{
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	ec 01       	movw	r28, r24
	while (*p)
     12c:	02 c0       	rjmp	.+4      	; 0x132 <usart1_transmit_string+0xc>
		usart1_transmit(*p++);
     12e:	0e 94 8c 00 	call	0x118	; 0x118 <usart1_transmit>
	UDR1 = data; 			        
}

void usart1_transmit_string(char* p)
{
	while (*p)
     132:	89 91       	ld	r24, Y+
     134:	88 23       	and	r24, r24
     136:	d9 f7       	brne	.-10     	; 0x12e <usart1_transmit_string+0x8>
		usart1_transmit(*p++);
}
     138:	df 91       	pop	r29
     13a:	cf 91       	pop	r28
     13c:	08 95       	ret

0000013e <__vector_25>:




SIGNAL(ADC_vect)
{
     13e:	1f 92       	push	r1
     140:	0f 92       	push	r0
     142:	0f b6       	in	r0, 0x3f	; 63
     144:	0f 92       	push	r0
     146:	11 24       	eor	r1, r1
     148:	8f 93       	push	r24
     14a:	9f 93       	push	r25
  ADdata = ADC;
     14c:	80 91 78 00 	lds	r24, 0x0078
     150:	90 91 79 00 	lds	r25, 0x0079
     154:	90 93 8a 01 	sts	0x018A, r25
     158:	80 93 89 01 	sts	0x0189, r24
  ADCSRA = 0xc8;
     15c:	88 ec       	ldi	r24, 0xC8	; 200
     15e:	80 93 7a 00 	sts	0x007A, r24
}
     162:	9f 91       	pop	r25
     164:	8f 91       	pop	r24
     166:	0f 90       	pop	r0
     168:	0f be       	out	0x3f, r0	; 63
     16a:	0f 90       	pop	r0
     16c:	1f 90       	pop	r1
     16e:	18 95       	reti

00000170 <ADcLCD>:

void ADcLCD(void)
{
      volume= ADdata; // 가변저항 PortF0
     170:	20 91 89 01 	lds	r18, 0x0189
     174:	30 91 8a 01 	lds	r19, 0x018A
     178:	30 93 8c 01 	sts	0x018C, r19
     17c:	20 93 8b 01 	sts	0x018B, r18
      voltage= volume*50/1023;      
     180:	42 e3       	ldi	r20, 0x32	; 50
     182:	50 e0       	ldi	r21, 0x00	; 0
     184:	24 9f       	mul	r18, r20
     186:	c0 01       	movw	r24, r0
     188:	25 9f       	mul	r18, r21
     18a:	90 0d       	add	r25, r0
     18c:	34 9f       	mul	r19, r20
     18e:	90 0d       	add	r25, r0
     190:	11 24       	eor	r1, r1
     192:	6f ef       	ldi	r22, 0xFF	; 255
     194:	73 e0       	ldi	r23, 0x03	; 3
     196:	0e 94 f6 05 	call	0xbec	; 0xbec <__udivmodhi4>
     19a:	70 93 90 01 	sts	0x0190, r23
     19e:	60 93 8f 01 	sts	0x018F, r22
   
}
     1a2:	08 95       	ret

000001a4 <initPort>:

void initPort(void)
{
   DDRC  = 0xff;   // LCD 데이터 및 명령 
     1a4:	8f ef       	ldi	r24, 0xFF	; 255
     1a6:	87 b9       	out	0x07, r24	; 7
   PORTC = 0x00;
     1a8:	18 b8       	out	0x08, r1	; 8
   DDRG  = 0xff;   // LCD 제어 출력 (RS, RW, E)
     1aa:	83 bb       	out	0x13, r24	; 19
   DDRF  = 0x00;   // 아날로그 입력 
     1ac:	10 ba       	out	0x10, r1	; 16
   DDRD = 0x00;      //switch 입력 설정
     1ae:	1a b8       	out	0x0a, r1	; 10
   DDRE  = 0x00; 	//외부 switch 입력설정 
     1b0:	1d b8       	out	0x0d, r1	; 13

   DDRB = 0xff;
     1b2:	84 b9       	out	0x04, r24	; 4
   PORTB = 0xff;
     1b4:	85 b9       	out	0x05, r24	; 5
}
     1b6:	08 95       	ret

000001b8 <ButtonInput>:
   unsigned char down;
   unsigned char safe;
   unsigned char* Button_Info;
      
   // 마스크를 이용해 포트D 입력에서 0번핀 입력 추출 
   in = PINE & BUTTON0_MASK;
     1b8:	9c b1       	in	r25, 0x0c	; 12

   if(in>0) up=0;   // S2버튼 안 눌러짐 
   else up=1;      // S2버튼 눌러짐

   // 마스크를 이용해 포트D 입력에서 1번핀 입력 추출 
   in = PINE & BUTTON1_MASK;
     1ba:	2c b1       	in	r18, 0x0c	; 12

   if(in>0) down=0;   // S3버튼 안 눌러짐   
     1bc:	81 e0       	ldi	r24, 0x01	; 1
     1be:	21 fd       	sbrc	r18, 1
     1c0:	80 e0       	ldi	r24, 0x00	; 0
   else down=1;      // S3버튼 눌러짐




   if(up==1 && down==0) Button_Info= "UP";   // S2버튼 누른 경우
     1c2:	90 fd       	sbrc	r25, 0
     1c4:	03 c0       	rjmp	.+6      	; 0x1cc <ButtonInput+0x14>
     1c6:	88 23       	and	r24, r24
     1c8:	31 f4       	brne	.+12     	; 0x1d6 <ButtonInput+0x1e>
     1ca:	08 c0       	rjmp	.+16     	; 0x1dc <ButtonInput+0x24>
   else if(up==0 && down==1) Button_Info = "DN";   // S3버튼 누른 경우
     1cc:	81 30       	cpi	r24, 0x01	; 1
     1ce:	49 f0       	breq	.+18     	; 0x1e2 <ButtonInput+0x2a>
   else if (up == 1 && down == 1) Button_Info = "BO"; // S4버튼 누른 경우
   else Button_Info = "NO";
     1d0:	89 e0       	ldi	r24, 0x09	; 9
     1d2:	91 e0       	ldi	r25, 0x01	; 1
     1d4:	08 95       	ret



   if(up==1 && down==0) Button_Info= "UP";   // S2버튼 누른 경우
   else if(up==0 && down==1) Button_Info = "DN";   // S3버튼 누른 경우
   else if (up == 1 && down == 1) Button_Info = "BO"; // S4버튼 누른 경우
     1d6:	86 e0       	ldi	r24, 0x06	; 6
     1d8:	91 e0       	ldi	r25, 0x01	; 1
     1da:	08 95       	ret
   else down=1;      // S3버튼 눌러짐




   if(up==1 && down==0) Button_Info= "UP";   // S2버튼 누른 경우
     1dc:	80 e0       	ldi	r24, 0x00	; 0
     1de:	91 e0       	ldi	r25, 0x01	; 1
     1e0:	08 95       	ret
   else if(up==0 && down==1) Button_Info = "DN";   // S3버튼 누른 경우
     1e2:	83 e0       	ldi	r24, 0x03	; 3
     1e4:	91 e0       	ldi	r25, 0x01	; 1
   else if (up == 1 && down == 1) Button_Info = "BO"; // S4버튼 누른 경우
   else Button_Info = "NO";
   return Button_Info;
}
     1e6:	08 95       	ret

000001e8 <E_Pulse>:
     1e8:	a2 9a       	sbi	0x14, 2	; 20
     1ea:	84 e6       	ldi	r24, 0x64	; 100
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	0e 94 cb 04 	call	0x996	; 0x996 <us_delay>
     1f2:	a2 98       	cbi	0x14, 2	; 20
     1f4:	08 95       	ret

000001f6 <LCD_init>:
     1f6:	88 e2       	ldi	r24, 0x28	; 40
     1f8:	90 e0       	ldi	r25, 0x00	; 0
     1fa:	0e 94 da 04 	call	0x9b4	; 0x9b4 <ms_delay>
     1fe:	88 e3       	ldi	r24, 0x38	; 56
     200:	88 b9       	out	0x08, r24	; 8
     202:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <E_Pulse>
     206:	88 e2       	ldi	r24, 0x28	; 40
     208:	90 e0       	ldi	r25, 0x00	; 0
     20a:	0e 94 cb 04 	call	0x996	; 0x996 <us_delay>
     20e:	8c e0       	ldi	r24, 0x0C	; 12
     210:	88 b9       	out	0x08, r24	; 8
     212:	88 e2       	ldi	r24, 0x28	; 40
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	0e 94 cb 04 	call	0x996	; 0x996 <us_delay>
     21a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <E_Pulse>
     21e:	81 e0       	ldi	r24, 0x01	; 1
     220:	88 b9       	out	0x08, r24	; 8
     222:	82 e0       	ldi	r24, 0x02	; 2
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	0e 94 da 04 	call	0x9b4	; 0x9b4 <ms_delay>
     22a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <E_Pulse>
     22e:	86 e0       	ldi	r24, 0x06	; 6
     230:	88 b9       	out	0x08, r24	; 8
     232:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <E_Pulse>
     236:	08 95       	ret

00000238 <LCD_cmd>:
     238:	a0 98       	cbi	0x14, 0	; 20
     23a:	a1 98       	cbi	0x14, 1	; 20
     23c:	88 b9       	out	0x08, r24	; 8
     23e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <E_Pulse>
     242:	08 95       	ret

00000244 <Write_Char>:
     244:	a0 9a       	sbi	0x14, 0	; 20
     246:	a1 98       	cbi	0x14, 1	; 20
     248:	88 b9       	out	0x08, r24	; 8
     24a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <E_Pulse>
     24e:	08 95       	ret

00000250 <LCD_Disp>:
     250:	a0 98       	cbi	0x14, 0	; 20
     252:	a1 98       	cbi	0x14, 1	; 20
     254:	66 23       	and	r22, r22
     256:	11 f4       	brne	.+4      	; 0x25c <LCD_Disp+0xc>
     258:	80 58       	subi	r24, 0x80	; 128
     25a:	03 c0       	rjmp	.+6      	; 0x262 <LCD_Disp+0x12>
     25c:	61 30       	cpi	r22, 0x01	; 1
     25e:	11 f4       	brne	.+4      	; 0x264 <LCD_Disp+0x14>
     260:	80 54       	subi	r24, 0x40	; 64
     262:	88 b9       	out	0x08, r24	; 8
     264:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <E_Pulse>
     268:	08 95       	ret

0000026a <LCD_Write>:
     26a:	0f 93       	push	r16
     26c:	1f 93       	push	r17
     26e:	cf 93       	push	r28
     270:	df 93       	push	r29
     272:	00 d0       	rcall	.+0      	; 0x274 <LCD_Write+0xa>
     274:	cd b7       	in	r28, 0x3d	; 61
     276:	de b7       	in	r29, 0x3e	; 62
     278:	49 83       	std	Y+1, r20	; 0x01
     27a:	5a 83       	std	Y+2, r21	; 0x02
     27c:	0e 94 28 01 	call	0x250	; 0x250 <LCD_Disp>
     280:	49 81       	ldd	r20, Y+1	; 0x01
     282:	04 2f       	mov	r16, r20
     284:	5a 81       	ldd	r21, Y+2	; 0x02
     286:	15 2f       	mov	r17, r21
     288:	02 c0       	rjmp	.+4      	; 0x28e <LCD_Write+0x24>
     28a:	0e 94 22 01 	call	0x244	; 0x244 <Write_Char>
     28e:	f8 01       	movw	r30, r16
     290:	81 91       	ld	r24, Z+
     292:	8f 01       	movw	r16, r30
     294:	88 23       	and	r24, r24
     296:	c9 f7       	brne	.-14     	; 0x28a <LCD_Write+0x20>
     298:	0f 90       	pop	r0
     29a:	0f 90       	pop	r0
     29c:	df 91       	pop	r29
     29e:	cf 91       	pop	r28
     2a0:	1f 91       	pop	r17
     2a2:	0f 91       	pop	r16
     2a4:	08 95       	ret

000002a6 <LCD_Write_char>:
     2a6:	cf 93       	push	r28
     2a8:	df 93       	push	r29
     2aa:	0f 92       	push	r0
     2ac:	cd b7       	in	r28, 0x3d	; 61
     2ae:	de b7       	in	r29, 0x3e	; 62
     2b0:	49 83       	std	Y+1, r20	; 0x01
     2b2:	0e 94 28 01 	call	0x250	; 0x250 <LCD_Disp>
     2b6:	49 81       	ldd	r20, Y+1	; 0x01
     2b8:	84 2f       	mov	r24, r20
     2ba:	0e 94 22 01 	call	0x244	; 0x244 <Write_Char>
     2be:	0f 90       	pop	r0
     2c0:	df 91       	pop	r29
     2c2:	cf 91       	pop	r28
     2c4:	08 95       	ret

000002c6 <can_init>:
     2c6:	90 91 d8 00 	lds	r25, 0x00D8
     2ca:	91 60       	ori	r25, 0x01	; 1
     2cc:	90 93 d8 00 	sts	0x00D8, r25
     2d0:	83 30       	cpi	r24, 0x03	; 3
     2d2:	89 f0       	breq	.+34     	; 0x2f6 <can_init+0x30>
     2d4:	84 30       	cpi	r24, 0x04	; 4
     2d6:	28 f4       	brcc	.+10     	; 0x2e2 <can_init+0x1c>
     2d8:	81 30       	cpi	r24, 0x01	; 1
     2da:	51 f0       	breq	.+20     	; 0x2f0 <can_init+0x2a>
     2dc:	82 30       	cpi	r24, 0x02	; 2
     2de:	d1 f4       	brne	.+52     	; 0x314 <can_init+0x4e>
     2e0:	11 c0       	rjmp	.+34     	; 0x304 <can_init+0x3e>
     2e2:	85 30       	cpi	r24, 0x05	; 5
     2e4:	61 f0       	breq	.+24     	; 0x2fe <can_init+0x38>
     2e6:	85 30       	cpi	r24, 0x05	; 5
     2e8:	40 f0       	brcs	.+16     	; 0x2fa <can_init+0x34>
     2ea:	86 30       	cpi	r24, 0x06	; 6
     2ec:	99 f4       	brne	.+38     	; 0x314 <can_init+0x4e>
     2ee:	09 c0       	rjmp	.+18     	; 0x302 <can_init+0x3c>
     2f0:	10 92 e2 00 	sts	0x00E2, r1
     2f4:	09 c0       	rjmp	.+18     	; 0x308 <can_init+0x42>
     2f6:	86 e0       	ldi	r24, 0x06	; 6
     2f8:	05 c0       	rjmp	.+10     	; 0x304 <can_init+0x3e>
     2fa:	88 e0       	ldi	r24, 0x08	; 8
     2fc:	03 c0       	rjmp	.+6      	; 0x304 <can_init+0x3e>
     2fe:	8e e0       	ldi	r24, 0x0E	; 14
     300:	01 c0       	rjmp	.+2      	; 0x304 <can_init+0x3e>
     302:	82 e1       	ldi	r24, 0x12	; 18
     304:	80 93 e2 00 	sts	0x00E2, r24
     308:	8c e0       	ldi	r24, 0x0C	; 12
     30a:	80 93 e3 00 	sts	0x00E3, r24
     30e:	87 e3       	ldi	r24, 0x37	; 55
     310:	80 93 e4 00 	sts	0x00E4, r24
     314:	80 e0       	ldi	r24, 0x00	; 0
     316:	98 2f       	mov	r25, r24
     318:	92 95       	swap	r25
     31a:	90 7f       	andi	r25, 0xF0	; 240
     31c:	90 93 ed 00 	sts	0x00ED, r25
     320:	10 92 ef 00 	sts	0x00EF, r1
     324:	10 92 ee 00 	sts	0x00EE, r1
     328:	10 92 f3 00 	sts	0x00F3, r1
     32c:	10 92 f2 00 	sts	0x00F2, r1
     330:	10 92 f1 00 	sts	0x00F1, r1
     334:	10 92 f0 00 	sts	0x00F0, r1
     338:	10 92 f7 00 	sts	0x00F7, r1
     33c:	10 92 f6 00 	sts	0x00F6, r1
     340:	10 92 f5 00 	sts	0x00F5, r1
     344:	10 92 f4 00 	sts	0x00F4, r1
     348:	10 92 fa 00 	sts	0x00FA, r1
     34c:	10 92 fa 00 	sts	0x00FA, r1
     350:	10 92 fa 00 	sts	0x00FA, r1
     354:	10 92 fa 00 	sts	0x00FA, r1
     358:	10 92 fa 00 	sts	0x00FA, r1
     35c:	10 92 fa 00 	sts	0x00FA, r1
     360:	10 92 fa 00 	sts	0x00FA, r1
     364:	10 92 fa 00 	sts	0x00FA, r1
     368:	8f 5f       	subi	r24, 0xFF	; 255
     36a:	8f 30       	cpi	r24, 0x0F	; 15
     36c:	a1 f6       	brne	.-88     	; 0x316 <can_init+0x50>
     36e:	10 92 db 00 	sts	0x00DB, r1
     372:	10 92 df 00 	sts	0x00DF, r1
     376:	10 92 de 00 	sts	0x00DE, r1
     37a:	10 92 e1 00 	sts	0x00E1, r1
     37e:	10 92 e0 00 	sts	0x00E0, r1
     382:	80 91 d8 00 	lds	r24, 0x00D8
     386:	82 60       	ori	r24, 0x02	; 2
     388:	80 93 d8 00 	sts	0x00D8, r24
     38c:	80 91 d9 00 	lds	r24, 0x00D9
     390:	82 ff       	sbrs	r24, 2
     392:	fc cf       	rjmp	.-8      	; 0x38c <can_init+0xc6>
     394:	08 95       	ret

00000396 <can_init_8Mhz>:
     396:	90 91 d8 00 	lds	r25, 0x00D8
     39a:	91 60       	ori	r25, 0x01	; 1
     39c:	90 93 d8 00 	sts	0x00D8, r25
     3a0:	83 30       	cpi	r24, 0x03	; 3
     3a2:	c1 f0       	breq	.+48     	; 0x3d4 <can_init_8Mhz+0x3e>
     3a4:	84 30       	cpi	r24, 0x04	; 4
     3a6:	28 f4       	brcc	.+10     	; 0x3b2 <can_init_8Mhz+0x1c>
     3a8:	81 30       	cpi	r24, 0x01	; 1
     3aa:	51 f0       	breq	.+20     	; 0x3c0 <can_init_8Mhz+0x2a>
     3ac:	82 30       	cpi	r24, 0x02	; 2
     3ae:	39 f5       	brne	.+78     	; 0x3fe <can_init_8Mhz+0x68>
     3b0:	0e c0       	rjmp	.+28     	; 0x3ce <can_init_8Mhz+0x38>
     3b2:	85 30       	cpi	r24, 0x05	; 5
     3b4:	c9 f0       	breq	.+50     	; 0x3e8 <can_init_8Mhz+0x52>
     3b6:	85 30       	cpi	r24, 0x05	; 5
     3b8:	78 f0       	brcs	.+30     	; 0x3d8 <can_init_8Mhz+0x42>
     3ba:	86 30       	cpi	r24, 0x06	; 6
     3bc:	01 f5       	brne	.+64     	; 0x3fe <can_init_8Mhz+0x68>
     3be:	16 c0       	rjmp	.+44     	; 0x3ec <can_init_8Mhz+0x56>
     3c0:	10 92 e2 00 	sts	0x00E2, r1
     3c4:	84 e0       	ldi	r24, 0x04	; 4
     3c6:	80 93 e3 00 	sts	0x00E3, r24
     3ca:	83 e1       	ldi	r24, 0x13	; 19
     3cc:	16 c0       	rjmp	.+44     	; 0x3fa <can_init_8Mhz+0x64>
     3ce:	10 92 e2 00 	sts	0x00E2, r1
     3d2:	0f c0       	rjmp	.+30     	; 0x3f2 <can_init_8Mhz+0x5c>
     3d4:	82 e0       	ldi	r24, 0x02	; 2
     3d6:	0b c0       	rjmp	.+22     	; 0x3ee <can_init_8Mhz+0x58>
     3d8:	82 e0       	ldi	r24, 0x02	; 2
     3da:	80 93 e2 00 	sts	0x00E2, r24
     3de:	8e e0       	ldi	r24, 0x0E	; 14
     3e0:	80 93 e3 00 	sts	0x00E3, r24
     3e4:	8b e4       	ldi	r24, 0x4B	; 75
     3e6:	09 c0       	rjmp	.+18     	; 0x3fa <can_init_8Mhz+0x64>
     3e8:	86 e0       	ldi	r24, 0x06	; 6
     3ea:	01 c0       	rjmp	.+2      	; 0x3ee <can_init_8Mhz+0x58>
     3ec:	88 e0       	ldi	r24, 0x08	; 8
     3ee:	80 93 e2 00 	sts	0x00E2, r24
     3f2:	8c e0       	ldi	r24, 0x0C	; 12
     3f4:	80 93 e3 00 	sts	0x00E3, r24
     3f8:	87 e3       	ldi	r24, 0x37	; 55
     3fa:	80 93 e4 00 	sts	0x00E4, r24
     3fe:	80 e0       	ldi	r24, 0x00	; 0
     400:	98 2f       	mov	r25, r24
     402:	92 95       	swap	r25
     404:	90 7f       	andi	r25, 0xF0	; 240
     406:	90 93 ed 00 	sts	0x00ED, r25
     40a:	10 92 ef 00 	sts	0x00EF, r1
     40e:	10 92 ee 00 	sts	0x00EE, r1
     412:	10 92 f3 00 	sts	0x00F3, r1
     416:	10 92 f2 00 	sts	0x00F2, r1
     41a:	10 92 f1 00 	sts	0x00F1, r1
     41e:	10 92 f0 00 	sts	0x00F0, r1
     422:	10 92 f7 00 	sts	0x00F7, r1
     426:	10 92 f6 00 	sts	0x00F6, r1
     42a:	10 92 f5 00 	sts	0x00F5, r1
     42e:	10 92 f4 00 	sts	0x00F4, r1
     432:	10 92 fa 00 	sts	0x00FA, r1
     436:	10 92 fa 00 	sts	0x00FA, r1
     43a:	10 92 fa 00 	sts	0x00FA, r1
     43e:	10 92 fa 00 	sts	0x00FA, r1
     442:	10 92 fa 00 	sts	0x00FA, r1
     446:	10 92 fa 00 	sts	0x00FA, r1
     44a:	10 92 fa 00 	sts	0x00FA, r1
     44e:	10 92 fa 00 	sts	0x00FA, r1
     452:	8f 5f       	subi	r24, 0xFF	; 255
     454:	8f 30       	cpi	r24, 0x0F	; 15
     456:	a1 f6       	brne	.-88     	; 0x400 <can_init_8Mhz+0x6a>
     458:	10 92 db 00 	sts	0x00DB, r1
     45c:	10 92 df 00 	sts	0x00DF, r1
     460:	10 92 de 00 	sts	0x00DE, r1
     464:	10 92 e1 00 	sts	0x00E1, r1
     468:	10 92 e0 00 	sts	0x00E0, r1
     46c:	80 e2       	ldi	r24, 0x20	; 32
     46e:	80 93 d8 00 	sts	0x00D8, r24
     472:	80 91 d8 00 	lds	r24, 0x00D8
     476:	82 60       	ori	r24, 0x02	; 2
     478:	80 93 d8 00 	sts	0x00D8, r24
     47c:	80 91 d9 00 	lds	r24, 0x00D9
     480:	82 ff       	sbrs	r24, 2
     482:	fc cf       	rjmp	.-8      	; 0x47c <can_init_8Mhz+0xe6>
     484:	08 95       	ret

00000486 <can_tx>:
     486:	0f 93       	push	r16
     488:	1f 93       	push	r17
     48a:	fb 01       	movw	r30, r22
     48c:	00 81       	ld	r16, Z
     48e:	11 81       	ldd	r17, Z+1	; 0x01
     490:	22 81       	ldd	r18, Z+2	; 0x02
     492:	33 81       	ldd	r19, Z+3	; 0x03
     494:	82 95       	swap	r24
     496:	80 7f       	andi	r24, 0xF0	; 240
     498:	80 93 ed 00 	sts	0x00ED, r24
     49c:	10 92 ee 00 	sts	0x00EE, r1
     4a0:	10 92 ef 00 	sts	0x00EF, r1
     4a4:	85 81       	ldd	r24, Z+5	; 0x05
     4a6:	88 23       	and	r24, r24
     4a8:	a1 f4       	brne	.+40     	; 0x4d2 <can_tx+0x4c>
     4aa:	d9 01       	movw	r26, r18
     4ac:	c8 01       	movw	r24, r16
     4ae:	53 e0       	ldi	r21, 0x03	; 3
     4b0:	b6 95       	lsr	r27
     4b2:	a7 95       	ror	r26
     4b4:	97 95       	ror	r25
     4b6:	87 95       	ror	r24
     4b8:	5a 95       	dec	r21
     4ba:	d1 f7       	brne	.-12     	; 0x4b0 <can_tx+0x2a>
     4bc:	80 93 f3 00 	sts	0x00F3, r24
     4c0:	02 95       	swap	r16
     4c2:	00 0f       	add	r16, r16
     4c4:	00 7e       	andi	r16, 0xE0	; 224
     4c6:	00 93 f2 00 	sts	0x00F2, r16
     4ca:	80 91 ef 00 	lds	r24, 0x00EF
     4ce:	8f 7e       	andi	r24, 0xEF	; 239
     4d0:	29 c0       	rjmp	.+82     	; 0x524 <can_tx+0x9e>
     4d2:	d9 01       	movw	r26, r18
     4d4:	c8 01       	movw	r24, r16
     4d6:	55 e1       	ldi	r21, 0x15	; 21
     4d8:	b6 95       	lsr	r27
     4da:	a7 95       	ror	r26
     4dc:	97 95       	ror	r25
     4de:	87 95       	ror	r24
     4e0:	5a 95       	dec	r21
     4e2:	d1 f7       	brne	.-12     	; 0x4d8 <can_tx+0x52>
     4e4:	80 93 f3 00 	sts	0x00F3, r24
     4e8:	d9 01       	movw	r26, r18
     4ea:	c8 01       	movw	r24, r16
     4ec:	6d e0       	ldi	r22, 0x0D	; 13
     4ee:	b6 95       	lsr	r27
     4f0:	a7 95       	ror	r26
     4f2:	97 95       	ror	r25
     4f4:	87 95       	ror	r24
     4f6:	6a 95       	dec	r22
     4f8:	d1 f7       	brne	.-12     	; 0x4ee <can_tx+0x68>
     4fa:	80 93 f2 00 	sts	0x00F2, r24
     4fe:	d9 01       	movw	r26, r18
     500:	c8 01       	movw	r24, r16
     502:	75 e0       	ldi	r23, 0x05	; 5
     504:	b6 95       	lsr	r27
     506:	a7 95       	ror	r26
     508:	97 95       	ror	r25
     50a:	87 95       	ror	r24
     50c:	7a 95       	dec	r23
     50e:	d1 f7       	brne	.-12     	; 0x504 <can_tx+0x7e>
     510:	80 93 f1 00 	sts	0x00F1, r24
     514:	00 0f       	add	r16, r16
     516:	00 0f       	add	r16, r16
     518:	00 0f       	add	r16, r16
     51a:	00 93 f0 00 	sts	0x00F0, r16
     51e:	80 91 ef 00 	lds	r24, 0x00EF
     522:	80 61       	ori	r24, 0x10	; 16
     524:	80 93 ef 00 	sts	0x00EF, r24
     528:	80 91 ef 00 	lds	r24, 0x00EF
     52c:	96 81       	ldd	r25, Z+6	; 0x06
     52e:	89 2b       	or	r24, r25
     530:	80 93 ef 00 	sts	0x00EF, r24
     534:	80 91 f0 00 	lds	r24, 0x00F0
     538:	44 70       	andi	r20, 0x04	; 4
     53a:	48 2b       	or	r20, r24
     53c:	40 93 f0 00 	sts	0x00F0, r20
     540:	80 91 f0 00 	lds	r24, 0x00F0
     544:	8d 7f       	andi	r24, 0xFD	; 253
     546:	80 93 f0 00 	sts	0x00F0, r24
     54a:	80 91 f0 00 	lds	r24, 0x00F0
     54e:	8e 7f       	andi	r24, 0xFE	; 254
     550:	80 93 f0 00 	sts	0x00F0, r24
     554:	80 e0       	ldi	r24, 0x00	; 0
     556:	09 c0       	rjmp	.+18     	; 0x56a <can_tx+0xe4>
     558:	df 01       	movw	r26, r30
     55a:	a8 0f       	add	r26, r24
     55c:	b1 1d       	adc	r27, r1
     55e:	17 96       	adiw	r26, 0x07	; 7
     560:	9c 91       	ld	r25, X
     562:	17 97       	sbiw	r26, 0x07	; 7
     564:	90 93 fa 00 	sts	0x00FA, r25
     568:	8f 5f       	subi	r24, 0xFF	; 255
     56a:	96 81       	ldd	r25, Z+6	; 0x06
     56c:	89 17       	cp	r24, r25
     56e:	a0 f3       	brcs	.-24     	; 0x558 <can_tx+0xd2>
     570:	80 91 ef 00 	lds	r24, 0x00EF
     574:	80 64       	ori	r24, 0x40	; 64
     576:	80 93 ef 00 	sts	0x00EF, r24
     57a:	80 91 ee 00 	lds	r24, 0x00EE
     57e:	86 ff       	sbrs	r24, 6
     580:	fc cf       	rjmp	.-8      	; 0x57a <can_tx+0xf4>
     582:	80 91 ee 00 	lds	r24, 0x00EE
     586:	8f 7b       	andi	r24, 0xBF	; 191
     588:	80 93 ee 00 	sts	0x00EE, r24
     58c:	81 e0       	ldi	r24, 0x01	; 1
     58e:	1f 91       	pop	r17
     590:	0f 91       	pop	r16
     592:	08 95       	ret

00000594 <can_rx>:
     594:	cf 92       	push	r12
     596:	df 92       	push	r13
     598:	ef 92       	push	r14
     59a:	ff 92       	push	r15
     59c:	0f 93       	push	r16
     59e:	1f 93       	push	r17
     5a0:	fb 01       	movw	r30, r22
     5a2:	82 95       	swap	r24
     5a4:	80 7f       	andi	r24, 0xF0	; 240
     5a6:	80 93 ed 00 	sts	0x00ED, r24
     5aa:	80 91 ee 00 	lds	r24, 0x00EE
     5ae:	85 ff       	sbrs	r24, 5
     5b0:	fc cf       	rjmp	.-8      	; 0x5aa <can_rx+0x16>
     5b2:	80 91 ef 00 	lds	r24, 0x00EF
     5b6:	84 fd       	sbrc	r24, 4
     5b8:	1b c0       	rjmp	.+54     	; 0x5f0 <can_rx+0x5c>
     5ba:	15 82       	std	Z+5, r1	; 0x05
     5bc:	80 91 f3 00 	lds	r24, 0x00F3
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	a0 e0       	ldi	r26, 0x00	; 0
     5c4:	b0 e0       	ldi	r27, 0x00	; 0
     5c6:	ba 2f       	mov	r27, r26
     5c8:	a9 2f       	mov	r26, r25
     5ca:	98 2f       	mov	r25, r24
     5cc:	88 27       	eor	r24, r24
     5ce:	40 91 f2 00 	lds	r20, 0x00F2
     5d2:	50 e0       	ldi	r21, 0x00	; 0
     5d4:	60 e0       	ldi	r22, 0x00	; 0
     5d6:	70 e0       	ldi	r23, 0x00	; 0
     5d8:	84 2b       	or	r24, r20
     5da:	95 2b       	or	r25, r21
     5dc:	a6 2b       	or	r26, r22
     5de:	b7 2b       	or	r27, r23
     5e0:	35 e0       	ldi	r19, 0x05	; 5
     5e2:	b6 95       	lsr	r27
     5e4:	a7 95       	ror	r26
     5e6:	97 95       	ror	r25
     5e8:	87 95       	ror	r24
     5ea:	3a 95       	dec	r19
     5ec:	d1 f7       	brne	.-12     	; 0x5e2 <can_rx+0x4e>
     5ee:	35 c0       	rjmp	.+106    	; 0x65a <can_rx+0xc6>
     5f0:	81 e0       	ldi	r24, 0x01	; 1
     5f2:	85 83       	std	Z+5, r24	; 0x05
     5f4:	80 91 f3 00 	lds	r24, 0x00F3
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	a0 e0       	ldi	r26, 0x00	; 0
     5fc:	b0 e0       	ldi	r27, 0x00	; 0
     5fe:	b8 2f       	mov	r27, r24
     600:	aa 27       	eor	r26, r26
     602:	99 27       	eor	r25, r25
     604:	88 27       	eor	r24, r24
     606:	c0 90 f2 00 	lds	r12, 0x00F2
     60a:	40 91 f1 00 	lds	r20, 0x00F1
     60e:	00 91 f0 00 	lds	r16, 0x00F0
     612:	dd 24       	eor	r13, r13
     614:	ee 24       	eor	r14, r14
     616:	ff 24       	eor	r15, r15
     618:	76 01       	movw	r14, r12
     61a:	dd 24       	eor	r13, r13
     61c:	cc 24       	eor	r12, r12
     61e:	8c 29       	or	r24, r12
     620:	9d 29       	or	r25, r13
     622:	ae 29       	or	r26, r14
     624:	bf 29       	or	r27, r15
     626:	10 e0       	ldi	r17, 0x00	; 0
     628:	20 e0       	ldi	r18, 0x00	; 0
     62a:	30 e0       	ldi	r19, 0x00	; 0
     62c:	80 2b       	or	r24, r16
     62e:	91 2b       	or	r25, r17
     630:	a2 2b       	or	r26, r18
     632:	b3 2b       	or	r27, r19
     634:	50 e0       	ldi	r21, 0x00	; 0
     636:	60 e0       	ldi	r22, 0x00	; 0
     638:	70 e0       	ldi	r23, 0x00	; 0
     63a:	76 2f       	mov	r23, r22
     63c:	65 2f       	mov	r22, r21
     63e:	54 2f       	mov	r21, r20
     640:	44 27       	eor	r20, r20
     642:	84 2b       	or	r24, r20
     644:	95 2b       	or	r25, r21
     646:	a6 2b       	or	r26, r22
     648:	b7 2b       	or	r27, r23
     64a:	68 94       	set
     64c:	12 f8       	bld	r1, 2
     64e:	b6 95       	lsr	r27
     650:	a7 95       	ror	r26
     652:	97 95       	ror	r25
     654:	87 95       	ror	r24
     656:	16 94       	lsr	r1
     658:	d1 f7       	brne	.-12     	; 0x64e <can_rx+0xba>
     65a:	80 83       	st	Z, r24
     65c:	91 83       	std	Z+1, r25	; 0x01
     65e:	a2 83       	std	Z+2, r26	; 0x02
     660:	b3 83       	std	Z+3, r27	; 0x03
     662:	80 91 f0 00 	lds	r24, 0x00F0
     666:	84 70       	andi	r24, 0x04	; 4
     668:	84 83       	std	Z+4, r24	; 0x04
     66a:	80 91 ef 00 	lds	r24, 0x00EF
     66e:	8f 70       	andi	r24, 0x0F	; 15
     670:	86 83       	std	Z+6, r24	; 0x06
     672:	40 e0       	ldi	r20, 0x00	; 0
     674:	09 c0       	rjmp	.+18     	; 0x688 <can_rx+0xf4>
     676:	80 91 fa 00 	lds	r24, 0x00FA
     67a:	2e 0f       	add	r18, r30
     67c:	3f 1f       	adc	r19, r31
     67e:	d9 01       	movw	r26, r18
     680:	17 96       	adiw	r26, 0x07	; 7
     682:	8c 93       	st	X, r24
     684:	17 97       	sbiw	r26, 0x07	; 7
     686:	4f 5f       	subi	r20, 0xFF	; 255
     688:	24 2f       	mov	r18, r20
     68a:	30 e0       	ldi	r19, 0x00	; 0
     68c:	80 91 ef 00 	lds	r24, 0x00EF
     690:	90 e0       	ldi	r25, 0x00	; 0
     692:	8f 70       	andi	r24, 0x0F	; 15
     694:	90 70       	andi	r25, 0x00	; 0
     696:	28 17       	cp	r18, r24
     698:	39 07       	cpc	r19, r25
     69a:	6c f3       	brlt	.-38     	; 0x676 <can_rx+0xe2>
     69c:	10 92 ee 00 	sts	0x00EE, r1
     6a0:	80 91 ef 00 	lds	r24, 0x00EF
     6a4:	80 68       	ori	r24, 0x80	; 128
     6a6:	80 93 ef 00 	sts	0x00EF, r24
     6aa:	80 91 ee 00 	lds	r24, 0x00EE
     6ae:	8f 7d       	andi	r24, 0xDF	; 223
     6b0:	80 93 ee 00 	sts	0x00EE, r24
     6b4:	81 e0       	ldi	r24, 0x01	; 1
     6b6:	1f 91       	pop	r17
     6b8:	0f 91       	pop	r16
     6ba:	ff 90       	pop	r15
     6bc:	ef 90       	pop	r14
     6be:	df 90       	pop	r13
     6c0:	cf 90       	pop	r12
     6c2:	08 95       	ret

000006c4 <can_rx_set>:
     6c4:	af 92       	push	r10
     6c6:	cf 92       	push	r12
     6c8:	df 92       	push	r13
     6ca:	ef 92       	push	r14
     6cc:	ff 92       	push	r15
     6ce:	0f 93       	push	r16
     6d0:	82 95       	swap	r24
     6d2:	80 7f       	andi	r24, 0xF0	; 240
     6d4:	80 93 ed 00 	sts	0x00ED, r24
     6d8:	10 92 ee 00 	sts	0x00EE, r1
     6dc:	db 01       	movw	r26, r22
     6de:	ca 01       	movw	r24, r20
     6e0:	22 23       	and	r18, r18
     6e2:	29 f5       	brne	.+74     	; 0x72e <can_rx_set+0x6a>
     6e4:	f3 e0       	ldi	r31, 0x03	; 3
     6e6:	b6 95       	lsr	r27
     6e8:	a7 95       	ror	r26
     6ea:	97 95       	ror	r25
     6ec:	87 95       	ror	r24
     6ee:	fa 95       	dec	r31
     6f0:	d1 f7       	brne	.-12     	; 0x6e6 <can_rx_set+0x22>
     6f2:	80 93 f3 00 	sts	0x00F3, r24
     6f6:	42 95       	swap	r20
     6f8:	44 0f       	add	r20, r20
     6fa:	40 7e       	andi	r20, 0xE0	; 224
     6fc:	40 93 f2 00 	sts	0x00F2, r20
     700:	d7 01       	movw	r26, r14
     702:	c6 01       	movw	r24, r12
     704:	23 e0       	ldi	r18, 0x03	; 3
     706:	b6 95       	lsr	r27
     708:	a7 95       	ror	r26
     70a:	97 95       	ror	r25
     70c:	87 95       	ror	r24
     70e:	2a 95       	dec	r18
     710:	d1 f7       	brne	.-12     	; 0x706 <can_rx_set+0x42>
     712:	80 93 f7 00 	sts	0x00F7, r24
     716:	c2 94       	swap	r12
     718:	cc 0c       	add	r12, r12
     71a:	30 ee       	ldi	r19, 0xE0	; 224
     71c:	c3 22       	and	r12, r19
     71e:	c0 92 f6 00 	sts	0x00F6, r12
     722:	10 92 f4 00 	sts	0x00F4, r1
     726:	80 91 ef 00 	lds	r24, 0x00EF
     72a:	8f 7e       	andi	r24, 0xEF	; 239
     72c:	4d c0       	rjmp	.+154    	; 0x7c8 <can_rx_set+0x104>
     72e:	e5 e1       	ldi	r30, 0x15	; 21
     730:	b6 95       	lsr	r27
     732:	a7 95       	ror	r26
     734:	97 95       	ror	r25
     736:	87 95       	ror	r24
     738:	ea 95       	dec	r30
     73a:	d1 f7       	brne	.-12     	; 0x730 <can_rx_set+0x6c>
     73c:	80 93 f3 00 	sts	0x00F3, r24
     740:	db 01       	movw	r26, r22
     742:	ca 01       	movw	r24, r20
     744:	fd e0       	ldi	r31, 0x0D	; 13
     746:	b6 95       	lsr	r27
     748:	a7 95       	ror	r26
     74a:	97 95       	ror	r25
     74c:	87 95       	ror	r24
     74e:	fa 95       	dec	r31
     750:	d1 f7       	brne	.-12     	; 0x746 <can_rx_set+0x82>
     752:	80 93 f2 00 	sts	0x00F2, r24
     756:	db 01       	movw	r26, r22
     758:	ca 01       	movw	r24, r20
     75a:	25 e0       	ldi	r18, 0x05	; 5
     75c:	b6 95       	lsr	r27
     75e:	a7 95       	ror	r26
     760:	97 95       	ror	r25
     762:	87 95       	ror	r24
     764:	2a 95       	dec	r18
     766:	d1 f7       	brne	.-12     	; 0x75c <can_rx_set+0x98>
     768:	80 93 f1 00 	sts	0x00F1, r24
     76c:	44 0f       	add	r20, r20
     76e:	44 0f       	add	r20, r20
     770:	44 0f       	add	r20, r20
     772:	40 93 f0 00 	sts	0x00F0, r20
     776:	d7 01       	movw	r26, r14
     778:	c6 01       	movw	r24, r12
     77a:	35 e1       	ldi	r19, 0x15	; 21
     77c:	b6 95       	lsr	r27
     77e:	a7 95       	ror	r26
     780:	97 95       	ror	r25
     782:	87 95       	ror	r24
     784:	3a 95       	dec	r19
     786:	d1 f7       	brne	.-12     	; 0x77c <can_rx_set+0xb8>
     788:	80 93 f7 00 	sts	0x00F7, r24
     78c:	d7 01       	movw	r26, r14
     78e:	c6 01       	movw	r24, r12
     790:	4d e0       	ldi	r20, 0x0D	; 13
     792:	b6 95       	lsr	r27
     794:	a7 95       	ror	r26
     796:	97 95       	ror	r25
     798:	87 95       	ror	r24
     79a:	4a 95       	dec	r20
     79c:	d1 f7       	brne	.-12     	; 0x792 <can_rx_set+0xce>
     79e:	80 93 f6 00 	sts	0x00F6, r24
     7a2:	d7 01       	movw	r26, r14
     7a4:	c6 01       	movw	r24, r12
     7a6:	e5 e0       	ldi	r30, 0x05	; 5
     7a8:	b6 95       	lsr	r27
     7aa:	a7 95       	ror	r26
     7ac:	97 95       	ror	r25
     7ae:	87 95       	ror	r24
     7b0:	ea 95       	dec	r30
     7b2:	d1 f7       	brne	.-12     	; 0x7a8 <can_rx_set+0xe4>
     7b4:	80 93 f5 00 	sts	0x00F5, r24
     7b8:	cc 0c       	add	r12, r12
     7ba:	cc 0c       	add	r12, r12
     7bc:	cc 0c       	add	r12, r12
     7be:	c0 92 f4 00 	sts	0x00F4, r12
     7c2:	80 91 ef 00 	lds	r24, 0x00EF
     7c6:	80 61       	ori	r24, 0x10	; 16
     7c8:	80 93 ef 00 	sts	0x00EF, r24
     7cc:	80 91 ef 00 	lds	r24, 0x00EF
     7d0:	0f 70       	andi	r16, 0x0F	; 15
     7d2:	08 2b       	or	r16, r24
     7d4:	00 93 ef 00 	sts	0x00EF, r16
     7d8:	90 91 f4 00 	lds	r25, 0x00F4
     7dc:	8a 2d       	mov	r24, r10
     7de:	87 70       	andi	r24, 0x07	; 7
     7e0:	89 2b       	or	r24, r25
     7e2:	80 93 f4 00 	sts	0x00F4, r24
     7e6:	80 91 f4 00 	lds	r24, 0x00F4
     7ea:	8e 7f       	andi	r24, 0xFE	; 254
     7ec:	80 93 f4 00 	sts	0x00F4, r24
     7f0:	80 91 ef 00 	lds	r24, 0x00EF
     7f4:	80 68       	ori	r24, 0x80	; 128
     7f6:	80 93 ef 00 	sts	0x00EF, r24
     7fa:	0f 91       	pop	r16
     7fc:	ff 90       	pop	r15
     7fe:	ef 90       	pop	r14
     800:	df 90       	pop	r13
     802:	cf 90       	pop	r12
     804:	af 90       	pop	r10
     806:	08 95       	ret

00000808 <can_int_rx_set>:
     808:	af 92       	push	r10
     80a:	cf 92       	push	r12
     80c:	df 92       	push	r13
     80e:	ef 92       	push	r14
     810:	ff 92       	push	r15
     812:	0f 93       	push	r16
     814:	38 2f       	mov	r19, r24
     816:	82 95       	swap	r24
     818:	80 7f       	andi	r24, 0xF0	; 240
     81a:	80 93 ed 00 	sts	0x00ED, r24
     81e:	10 92 ee 00 	sts	0x00EE, r1
     822:	80 91 ef 00 	lds	r24, 0x00EF
     826:	21 ff       	sbrs	r18, 1
     828:	02 c0       	rjmp	.+4      	; 0x82e <can_int_rx_set+0x26>
     82a:	80 62       	ori	r24, 0x20	; 32
     82c:	01 c0       	rjmp	.+2      	; 0x830 <can_int_rx_set+0x28>
     82e:	8f 7d       	andi	r24, 0xDF	; 223
     830:	80 93 ef 00 	sts	0x00EF, r24
     834:	db 01       	movw	r26, r22
     836:	ca 01       	movw	r24, r20
     838:	20 fd       	sbrc	r18, 0
     83a:	25 c0       	rjmp	.+74     	; 0x886 <can_int_rx_set+0x7e>
     83c:	23 e0       	ldi	r18, 0x03	; 3
     83e:	b6 95       	lsr	r27
     840:	a7 95       	ror	r26
     842:	97 95       	ror	r25
     844:	87 95       	ror	r24
     846:	2a 95       	dec	r18
     848:	d1 f7       	brne	.-12     	; 0x83e <can_int_rx_set+0x36>
     84a:	80 93 f3 00 	sts	0x00F3, r24
     84e:	42 95       	swap	r20
     850:	44 0f       	add	r20, r20
     852:	40 7e       	andi	r20, 0xE0	; 224
     854:	40 93 f2 00 	sts	0x00F2, r20
     858:	d7 01       	movw	r26, r14
     85a:	c6 01       	movw	r24, r12
     85c:	43 e0       	ldi	r20, 0x03	; 3
     85e:	b6 95       	lsr	r27
     860:	a7 95       	ror	r26
     862:	97 95       	ror	r25
     864:	87 95       	ror	r24
     866:	4a 95       	dec	r20
     868:	d1 f7       	brne	.-12     	; 0x85e <can_int_rx_set+0x56>
     86a:	80 93 f7 00 	sts	0x00F7, r24
     86e:	c2 94       	swap	r12
     870:	cc 0c       	add	r12, r12
     872:	50 ee       	ldi	r21, 0xE0	; 224
     874:	c5 22       	and	r12, r21
     876:	c0 92 f6 00 	sts	0x00F6, r12
     87a:	10 92 f4 00 	sts	0x00F4, r1
     87e:	80 91 ef 00 	lds	r24, 0x00EF
     882:	8f 7e       	andi	r24, 0xEF	; 239
     884:	4d c0       	rjmp	.+154    	; 0x920 <can_int_rx_set+0x118>
     886:	e5 e1       	ldi	r30, 0x15	; 21
     888:	b6 95       	lsr	r27
     88a:	a7 95       	ror	r26
     88c:	97 95       	ror	r25
     88e:	87 95       	ror	r24
     890:	ea 95       	dec	r30
     892:	d1 f7       	brne	.-12     	; 0x888 <can_int_rx_set+0x80>
     894:	80 93 f3 00 	sts	0x00F3, r24
     898:	db 01       	movw	r26, r22
     89a:	ca 01       	movw	r24, r20
     89c:	fd e0       	ldi	r31, 0x0D	; 13
     89e:	b6 95       	lsr	r27
     8a0:	a7 95       	ror	r26
     8a2:	97 95       	ror	r25
     8a4:	87 95       	ror	r24
     8a6:	fa 95       	dec	r31
     8a8:	d1 f7       	brne	.-12     	; 0x89e <can_int_rx_set+0x96>
     8aa:	80 93 f2 00 	sts	0x00F2, r24
     8ae:	db 01       	movw	r26, r22
     8b0:	ca 01       	movw	r24, r20
     8b2:	25 e0       	ldi	r18, 0x05	; 5
     8b4:	b6 95       	lsr	r27
     8b6:	a7 95       	ror	r26
     8b8:	97 95       	ror	r25
     8ba:	87 95       	ror	r24
     8bc:	2a 95       	dec	r18
     8be:	d1 f7       	brne	.-12     	; 0x8b4 <can_int_rx_set+0xac>
     8c0:	80 93 f1 00 	sts	0x00F1, r24
     8c4:	44 0f       	add	r20, r20
     8c6:	44 0f       	add	r20, r20
     8c8:	44 0f       	add	r20, r20
     8ca:	40 93 f0 00 	sts	0x00F0, r20
     8ce:	d7 01       	movw	r26, r14
     8d0:	c6 01       	movw	r24, r12
     8d2:	45 e1       	ldi	r20, 0x15	; 21
     8d4:	b6 95       	lsr	r27
     8d6:	a7 95       	ror	r26
     8d8:	97 95       	ror	r25
     8da:	87 95       	ror	r24
     8dc:	4a 95       	dec	r20
     8de:	d1 f7       	brne	.-12     	; 0x8d4 <can_int_rx_set+0xcc>
     8e0:	80 93 f7 00 	sts	0x00F7, r24
     8e4:	d7 01       	movw	r26, r14
     8e6:	c6 01       	movw	r24, r12
     8e8:	ed e0       	ldi	r30, 0x0D	; 13
     8ea:	b6 95       	lsr	r27
     8ec:	a7 95       	ror	r26
     8ee:	97 95       	ror	r25
     8f0:	87 95       	ror	r24
     8f2:	ea 95       	dec	r30
     8f4:	d1 f7       	brne	.-12     	; 0x8ea <can_int_rx_set+0xe2>
     8f6:	80 93 f6 00 	sts	0x00F6, r24
     8fa:	d7 01       	movw	r26, r14
     8fc:	c6 01       	movw	r24, r12
     8fe:	f5 e0       	ldi	r31, 0x05	; 5
     900:	b6 95       	lsr	r27
     902:	a7 95       	ror	r26
     904:	97 95       	ror	r25
     906:	87 95       	ror	r24
     908:	fa 95       	dec	r31
     90a:	d1 f7       	brne	.-12     	; 0x900 <can_int_rx_set+0xf8>
     90c:	80 93 f5 00 	sts	0x00F5, r24
     910:	cc 0c       	add	r12, r12
     912:	cc 0c       	add	r12, r12
     914:	cc 0c       	add	r12, r12
     916:	c0 92 f4 00 	sts	0x00F4, r12
     91a:	80 91 ef 00 	lds	r24, 0x00EF
     91e:	80 61       	ori	r24, 0x10	; 16
     920:	80 93 ef 00 	sts	0x00EF, r24
     924:	80 91 ef 00 	lds	r24, 0x00EF
     928:	0f 70       	andi	r16, 0x0F	; 15
     92a:	08 2b       	or	r16, r24
     92c:	00 93 ef 00 	sts	0x00EF, r16
     930:	90 91 f4 00 	lds	r25, 0x00F4
     934:	8a 2d       	mov	r24, r10
     936:	87 70       	andi	r24, 0x07	; 7
     938:	89 2b       	or	r24, r25
     93a:	80 93 f4 00 	sts	0x00F4, r24
     93e:	80 91 db 00 	lds	r24, 0x00DB
     942:	80 6a       	ori	r24, 0xA0	; 160
     944:	80 93 db 00 	sts	0x00DB, r24
     948:	38 30       	cpi	r19, 0x08	; 8
     94a:	50 f4       	brcc	.+20     	; 0x960 <can_int_rx_set+0x158>
     94c:	81 e0       	ldi	r24, 0x01	; 1
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	02 c0       	rjmp	.+4      	; 0x956 <can_int_rx_set+0x14e>
     952:	88 0f       	add	r24, r24
     954:	99 1f       	adc	r25, r25
     956:	3a 95       	dec	r19
     958:	e2 f7       	brpl	.-8      	; 0x952 <can_int_rx_set+0x14a>
     95a:	80 93 de 00 	sts	0x00DE, r24
     95e:	0d c0       	rjmp	.+26     	; 0x97a <can_int_rx_set+0x172>
     960:	23 2f       	mov	r18, r19
     962:	30 e0       	ldi	r19, 0x00	; 0
     964:	28 50       	subi	r18, 0x08	; 8
     966:	30 40       	sbci	r19, 0x00	; 0
     968:	81 e0       	ldi	r24, 0x01	; 1
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	02 c0       	rjmp	.+4      	; 0x972 <can_int_rx_set+0x16a>
     96e:	88 0f       	add	r24, r24
     970:	99 1f       	adc	r25, r25
     972:	2a 95       	dec	r18
     974:	e2 f7       	brpl	.-8      	; 0x96e <can_int_rx_set+0x166>
     976:	80 93 df 00 	sts	0x00DF, r24
     97a:	80 91 ef 00 	lds	r24, 0x00EF
     97e:	80 68       	ori	r24, 0x80	; 128
     980:	80 93 ef 00 	sts	0x00EF, r24
     984:	78 94       	sei
     986:	0f 91       	pop	r16
     988:	ff 90       	pop	r15
     98a:	ef 90       	pop	r14
     98c:	df 90       	pop	r13
     98e:	cf 90       	pop	r12
     990:	af 90       	pop	r10
     992:	08 95       	ret

00000994 <delay>:
     994:	08 95       	ret

00000996 <us_delay>:
     996:	20 e0       	ldi	r18, 0x00	; 0
     998:	30 e0       	ldi	r19, 0x00	; 0
     99a:	08 c0       	rjmp	.+16     	; 0x9ac <us_delay+0x16>
     99c:	0f 92       	push	r0
     99e:	0f 90       	pop	r0
     9a0:	0f 92       	push	r0
     9a2:	0f 90       	pop	r0
     9a4:	0f 92       	push	r0
     9a6:	0f 90       	pop	r0
     9a8:	2f 5f       	subi	r18, 0xFF	; 255
     9aa:	3f 4f       	sbci	r19, 0xFF	; 255
     9ac:	28 17       	cp	r18, r24
     9ae:	39 07       	cpc	r19, r25
     9b0:	a9 f7       	brne	.-22     	; 0x99c <us_delay+0x6>
     9b2:	08 95       	ret

000009b4 <ms_delay>:
     9b4:	0f 93       	push	r16
     9b6:	1f 93       	push	r17
     9b8:	cf 93       	push	r28
     9ba:	df 93       	push	r29
     9bc:	8c 01       	movw	r16, r24
     9be:	c0 e0       	ldi	r28, 0x00	; 0
     9c0:	d0 e0       	ldi	r29, 0x00	; 0
     9c2:	05 c0       	rjmp	.+10     	; 0x9ce <ms_delay+0x1a>
     9c4:	88 ee       	ldi	r24, 0xE8	; 232
     9c6:	93 e0       	ldi	r25, 0x03	; 3
     9c8:	0e 94 cb 04 	call	0x996	; 0x996 <us_delay>
     9cc:	21 96       	adiw	r28, 0x01	; 1
     9ce:	c0 17       	cp	r28, r16
     9d0:	d1 07       	cpc	r29, r17
     9d2:	c1 f7       	brne	.-16     	; 0x9c4 <ms_delay+0x10>
     9d4:	df 91       	pop	r29
     9d6:	cf 91       	pop	r28
     9d8:	1f 91       	pop	r17
     9da:	0f 91       	pop	r16
     9dc:	08 95       	ret

000009de <main>:

int main(void)
{
     9de:	cf 93       	push	r28
     9e0:	df 93       	push	r29
     9e2:	00 d0       	rcall	.+0      	; 0x9e4 <main+0x6>
     9e4:	00 d0       	rcall	.+0      	; 0x9e6 <main+0x8>
     9e6:	0f 92       	push	r0
     9e8:	cd b7       	in	r28, 0x3d	; 61
     9ea:	de b7       	in	r29, 0x3e	; 62
   initPort();      // 입출력 포트 초기화
     9ec:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <initPort>
   LCD_init();     // LCD 초기화
     9f0:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <LCD_init>
   can_init(b250k   );   // CAN 보레이트를 원하는 값으로 세팅한다.
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	0e 94 63 01 	call	0x2c6	; 0x2c6 <can_init>
   initAdc();      // AD 변환 초기화
     9fa:	0e 94 6b 00 	call	0xd6	; 0xd6 <initAdc>
   sei();         // INT 인에이블 
     9fe:	78 94       	sei

   LCD_Write(1,0,"Butten : ");
     a00:	81 e0       	ldi	r24, 0x01	; 1
     a02:	60 e0       	ldi	r22, 0x00	; 0
     a04:	4c e0       	ldi	r20, 0x0C	; 12
     a06:	51 e0       	ldi	r21, 0x01	; 1
     a08:	0e 94 35 01 	call	0x26a	; 0x26a <LCD_Write>
   LCD_Write(0,1,"Mode : ");
     a0c:	80 e0       	ldi	r24, 0x00	; 0
     a0e:	61 e0       	ldi	r22, 0x01	; 1
     a10:	46 e1       	ldi	r20, 0x16	; 22
     a12:	51 e0       	ldi	r21, 0x01	; 1
     a14:	0e 94 35 01 	call	0x26a	; 0x26a <LCD_Write>

	current_mode=0;
     a18:	10 92 8e 01 	sts	0x018E, r1
     a1c:	10 92 8d 01 	sts	0x018D, r1
	current_speed=0;
     a20:	10 92 93 01 	sts	0x0193, r1
     a24:	10 92 92 01 	sts	0x0192, r1

   unsigned char* out;
   char temp[5];
	char tempVoltage;
   
   can_rx_set( 3, 0x03, EXT, 8, 0x00, 0x05  );    //only 0x03 message recieve from MCU2
     a28:	83 e0       	ldi	r24, 0x03	; 3
     a2a:	43 e0       	ldi	r20, 0x03	; 3
     a2c:	50 e0       	ldi	r21, 0x00	; 0
     a2e:	60 e0       	ldi	r22, 0x00	; 0
     a30:	70 e0       	ldi	r23, 0x00	; 0
     a32:	21 e0       	ldi	r18, 0x01	; 1
     a34:	08 e0       	ldi	r16, 0x08	; 8
     a36:	cc 24       	eor	r12, r12
     a38:	dd 24       	eor	r13, r13
     a3a:	76 01       	movw	r14, r12
     a3c:	e5 e0       	ldi	r30, 0x05	; 5
     a3e:	ae 2e       	mov	r10, r30
     a40:	0e 94 62 03 	call	0x6c4	; 0x6c4 <can_rx_set>
   can_rx_set( 4, 0x04, EXT, 8, 0x00, 0x05  );
     a44:	84 e0       	ldi	r24, 0x04	; 4
     a46:	44 e0       	ldi	r20, 0x04	; 4
     a48:	50 e0       	ldi	r21, 0x00	; 0
     a4a:	60 e0       	ldi	r22, 0x00	; 0
     a4c:	70 e0       	ldi	r23, 0x00	; 0
     a4e:	21 e0       	ldi	r18, 0x01	; 1
     a50:	0e 94 62 03 	call	0x6c4	; 0x6c4 <can_rx_set>
     
//-------현재 모드설정 부분-------- 

     out = ButtonInput();
      if (out == "UP") {
         current_mode = 1;//SPEED_UP
     a54:	f1 e0       	ldi	r31, 0x01	; 1
     a56:	af 2e       	mov	r10, r31
     a58:	b1 2c       	mov	r11, r1
		 
      }
      else if(out == "DN") {
         current_mode = 2;//SPEED_DOWN
     a5a:	a2 e0       	ldi	r26, 0x02	; 2
     a5c:	8a 2e       	mov	r8, r26
     a5e:	91 2c       	mov	r9, r1
	 
//------모드설정 끝------

	 
	 tempVoltage = (char)voltage;
	 sprintf(temp,"%d",tempVoltage);
     a60:	6e 01       	movw	r12, r28
     a62:	08 94       	sec
     a64:	c1 1c       	adc	r12, r1
     a66:	d1 1c       	adc	r13, r1
     a68:	be e1       	ldi	r27, 0x1E	; 30
     a6a:	6b 2e       	mov	r6, r27
     a6c:	b1 e0       	ldi	r27, 0x01	; 1
     a6e:	7b 2e       	mov	r7, r27
		if(msg4.data[2] == 1){//만약 경고 알림이 1이면
			PORTB = 0x00; //불 키는거
			 
		}
		else if(msg4.data[2] == 0) {
		    PORTB = 0xff;
     a70:	ee 24       	eor	r14, r14
     a72:	ea 94       	dec	r14
     /* x : voltage_x , y : voltage_y
     /* current_mode : 0. parking 1. reverse 2. neutral 3. driving
                   default : 0. parking
     /* 
      ********************************************/
     ADcLCD();//가변저항 읽는함수
     a74:	0e 94 b8 00 	call	0x170	; 0x170 <ADcLCD>

     
     
//-------현재 모드설정 부분-------- 

     out = ButtonInput();
     a78:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ButtonInput>
     a7c:	8c 01       	movw	r16, r24
      if (out == "UP") {
     a7e:	81 e0       	ldi	r24, 0x01	; 1
     a80:	00 30       	cpi	r16, 0x00	; 0
     a82:	18 07       	cpc	r17, r24
     a84:	29 f4       	brne	.+10     	; 0xa90 <main+0xb2>
         current_mode = 1;//SPEED_UP
     a86:	b0 92 8e 01 	sts	0x018E, r11
     a8a:	a0 92 8d 01 	sts	0x018D, r10
     a8e:	11 c0       	rjmp	.+34     	; 0xab2 <main+0xd4>
		 
      }
      else if(out == "DN") {
     a90:	91 e0       	ldi	r25, 0x01	; 1
     a92:	03 30       	cpi	r16, 0x03	; 3
     a94:	19 07       	cpc	r17, r25
     a96:	29 f4       	brne	.+10     	; 0xaa2 <main+0xc4>
         current_mode = 2;//SPEED_DOWN
     a98:	90 92 8e 01 	sts	0x018E, r9
     a9c:	80 92 8d 01 	sts	0x018D, r8
     aa0:	08 c0       	rjmp	.+16     	; 0xab2 <main+0xd4>
		 
      }
	  else if(out == "BO"){
     aa2:	a1 e0       	ldi	r26, 0x01	; 1
     aa4:	06 30       	cpi	r16, 0x06	; 6
     aa6:	1a 07       	cpc	r17, r26
     aa8:	21 f4       	brne	.+8      	; 0xab2 <main+0xd4>
	  	 //current_mode = current_mode;
		 current_mode = 0;//Wait
     aaa:	10 92 8e 01 	sts	0x018E, r1
     aae:	10 92 8d 01 	sts	0x018D, r1
	  }
	 
//------모드설정 끝------

	 
	 tempVoltage = (char)voltage;
     ab2:	f0 90 8f 01 	lds	r15, 0x018F
	 sprintf(temp,"%d",tempVoltage);
     ab6:	00 d0       	rcall	.+0      	; 0xab8 <main+0xda>
     ab8:	00 d0       	rcall	.+0      	; 0xaba <main+0xdc>
     aba:	00 d0       	rcall	.+0      	; 0xabc <main+0xde>
     abc:	ed b7       	in	r30, 0x3d	; 61
     abe:	fe b7       	in	r31, 0x3e	; 62
     ac0:	31 96       	adiw	r30, 0x01	; 1
     ac2:	ad b7       	in	r26, 0x3d	; 61
     ac4:	be b7       	in	r27, 0x3e	; 62
     ac6:	12 96       	adiw	r26, 0x02	; 2
     ac8:	dc 92       	st	X, r13
     aca:	ce 92       	st	-X, r12
     acc:	11 97       	sbiw	r26, 0x01	; 1
     ace:	73 82       	std	Z+3, r7	; 0x03
     ad0:	62 82       	std	Z+2, r6	; 0x02
     ad2:	f4 82       	std	Z+4, r15	; 0x04
     ad4:	15 82       	std	Z+5, r1	; 0x05
     ad6:	0e 94 0a 06 	call	0xc14	; 0xc14 <sprintf>

	  LCD_Write(9,0,out);
     ada:	8d b7       	in	r24, 0x3d	; 61
     adc:	9e b7       	in	r25, 0x3e	; 62
     ade:	06 96       	adiw	r24, 0x06	; 6
     ae0:	0f b6       	in	r0, 0x3f	; 63
     ae2:	f8 94       	cli
     ae4:	9e bf       	out	0x3e, r25	; 62
     ae6:	0f be       	out	0x3f, r0	; 63
     ae8:	8d bf       	out	0x3d, r24	; 61
     aea:	89 e0       	ldi	r24, 0x09	; 9
     aec:	60 e0       	ldi	r22, 0x00	; 0
     aee:	a8 01       	movw	r20, r16
     af0:	0e 94 35 01 	call	0x26a	; 0x26a <LCD_Write>
	  LCD_Write(13,0,temp);
     af4:	8d e0       	ldi	r24, 0x0D	; 13
     af6:	60 e0       	ldi	r22, 0x00	; 0
     af8:	a6 01       	movw	r20, r12
     afa:	0e 94 35 01 	call	0x26a	; 0x26a <LCD_Write>
	  LCD_Write(9,1,mode[current_mode]);
     afe:	80 91 8d 01 	lds	r24, 0x018D
     b02:	90 91 8e 01 	lds	r25, 0x018E
     b06:	ac 01       	movw	r20, r24
     b08:	44 0f       	add	r20, r20
     b0a:	55 1f       	adc	r21, r21
     b0c:	48 0f       	add	r20, r24
     b0e:	59 1f       	adc	r21, r25
     b10:	44 0f       	add	r20, r20
     b12:	55 1f       	adc	r21, r21
     b14:	44 0f       	add	r20, r20
     b16:	55 1f       	adc	r21, r21
     b18:	4f 5d       	subi	r20, 0xDF	; 223
     b1a:	5e 4f       	sbci	r21, 0xFE	; 254
     b1c:	89 e0       	ldi	r24, 0x09	; 9
     b1e:	61 e0       	ldi	r22, 0x01	; 1
     b20:	0e 94 35 01 	call	0x26a	; 0x26a <LCD_Write>




	  //From MCU1 to MCU2
	 msg1.data[0] = current_mode;
     b24:	90 91 8d 01 	lds	r25, 0x018D
     b28:	90 93 5b 01 	sts	0x015B, r25
     msg1.data[1] = '\0'; 
     b2c:	10 92 5c 01 	sts	0x015C, r1
     msg1.data[2] = current_speed; 
     b30:	80 91 92 01 	lds	r24, 0x0192
     b34:	80 93 5d 01 	sts	0x015D, r24
     msg1.data[3] = '\0'; 
     b38:	10 92 5e 01 	sts	0x015E, r1
     msg1.data[4] = '\0'; 
     b3c:	10 92 5f 01 	sts	0x015F, r1
     msg1.data[5] = '\0'; 
     b40:	10 92 60 01 	sts	0x0160, r1
     msg1.data[6] = '\0';
     b44:	10 92 61 01 	sts	0x0161, r1
     msg1.data[7] = '\0'; 
     b48:	10 92 62 01 	sts	0x0162, r1
	
	 //From MCU1 to MCU3
	 msg2.data[0] = current_mode;
     b4c:	90 93 4c 01 	sts	0x014C, r25
     msg2.data[1] = '\0'; 
     b50:	10 92 4d 01 	sts	0x014D, r1
     msg2.data[2] = current_speed;  
     b54:	80 93 4e 01 	sts	0x014E, r24
     msg2.data[3] = '\0'; 
     b58:	10 92 4f 01 	sts	0x014F, r1
     msg2.data[4] = tempVoltage; //가변저항 값 전달 
     b5c:	f0 92 50 01 	sts	0x0150, r15
     msg2.data[5] = '\0'; 
     b60:	10 92 51 01 	sts	0x0151, r1
     msg2.data[6] = '\0';
     b64:	10 92 52 01 	sts	0x0152, r1
     msg2.data[7] = '\0';
     b68:	10 92 53 01 	sts	0x0153, r1

	  can_tx(2, &msg2, 0);
     b6c:	82 e0       	ldi	r24, 0x02	; 2
     b6e:	65 e4       	ldi	r22, 0x45	; 69
     b70:	71 e0       	ldi	r23, 0x01	; 1
     b72:	40 e0       	ldi	r20, 0x00	; 0
     b74:	0e 94 43 02 	call	0x486	; 0x486 <can_tx>
      can_tx(1, &msg1, 0);
     b78:	81 e0       	ldi	r24, 0x01	; 1
     b7a:	64 e5       	ldi	r22, 0x54	; 84
     b7c:	71 e0       	ldi	r23, 0x01	; 1
     b7e:	40 e0       	ldi	r20, 0x00	; 0
     b80:	0e 94 43 02 	call	0x486	; 0x486 <can_tx>

	 //can_rx(3, &msg3);
	  //can_rx(4, &msg4);
	  
      if(current_mode == 0) {//현재 상태가 Wait이면 서보모터 쪽에서NODE2에서 메세지 받기
     b84:	80 91 8d 01 	lds	r24, 0x018D
     b88:	90 91 8e 01 	lds	r25, 0x018E
     b8c:	00 97       	sbiw	r24, 0x00	; 0
     b8e:	a9 f4       	brne	.+42     	; 0xbba <main+0x1dc>
         can_rx(4, &msg4);//data = {현재 안전바 각도, \0, 경고 알림, \0\0\0\0\0\ }
     b90:	84 e0       	ldi	r24, 0x04	; 4
     b92:	64 e9       	ldi	r22, 0x94	; 148
     b94:	71 e0       	ldi	r23, 0x01	; 1
     b96:	0e 94 ca 02 	call	0x594	; 0x594 <can_rx>
		 //LCD_Write_char(13,0,msg4.data[2]);
		//서보모터쪽에서도 현재 모드에 따라서 통신을 보내줘야함
		if(msg4.data[2] == 1){//만약 경고 알림이 1이면
     b9a:	40 91 9d 01 	lds	r20, 0x019D
     b9e:	41 30       	cpi	r20, 0x01	; 1
     ba0:	11 f4       	brne	.+4      	; 0xba6 <main+0x1c8>
			PORTB = 0x00; //불 키는거
     ba2:	15 b8       	out	0x05, r1	; 5
     ba4:	03 c0       	rjmp	.+6      	; 0xbac <main+0x1ce>
			 
		}
		else if(msg4.data[2] == 0) {
     ba6:	44 23       	and	r20, r20
     ba8:	09 f4       	brne	.+2      	; 0xbac <main+0x1ce>
		    PORTB = 0xff;
     baa:	e5 b8       	out	0x05, r14	; 5
		} 
		LCD_Write(13,1,msg4.data[2]+'0');
     bac:	50 e0       	ldi	r21, 0x00	; 0
     bae:	40 5d       	subi	r20, 0xD0	; 208
     bb0:	5f 4f       	sbci	r21, 0xFF	; 255
     bb2:	8d e0       	ldi	r24, 0x0D	; 13
     bb4:	61 e0       	ldi	r22, 0x01	; 1
     bb6:	0e 94 35 01 	call	0x26a	; 0x26a <LCD_Write>
         }
		 
	  //else
	  
	  if(current_mode != 0){//동작중 일때
     bba:	80 91 8d 01 	lds	r24, 0x018D
     bbe:	90 91 8e 01 	lds	r25, 0x018E
     bc2:	00 97       	sbiw	r24, 0x00	; 0
     bc4:	09 f4       	brne	.+2      	; 0xbc8 <main+0x1ea>
     bc6:	56 cf       	rjmp	.-340    	; 0xa74 <main+0x96>

        can_rx(3, &msg3);//data = {현재 모드, \0, 현재 속도, \0\0\0\0\0\ }
     bc8:	83 e0       	ldi	r24, 0x03	; 3
     bca:	6a e7       	ldi	r22, 0x7A	; 122
     bcc:	71 e0       	ldi	r23, 0x01	; 1
     bce:	0e 94 ca 02 	call	0x594	; 0x594 <can_rx>
		//DC모터쪽에서도 현재 모드에 따라서 통신을 보내줘야함
		current_speed = msg3.data[2];//속도 갱신
     bd2:	80 91 83 01 	lds	r24, 0x0183
     bd6:	80 93 92 01 	sts	0x0192, r24
     bda:	10 92 93 01 	sts	0x0193, r1
		current_mode =  msg3.data[0];//모드 갱신 
     bde:	80 91 81 01 	lds	r24, 0x0181
     be2:	80 93 8d 01 	sts	0x018D, r24
     be6:	10 92 8e 01 	sts	0x018E, r1
     bea:	44 cf       	rjmp	.-376    	; 0xa74 <main+0x96>

00000bec <__udivmodhi4>:
     bec:	aa 1b       	sub	r26, r26
     bee:	bb 1b       	sub	r27, r27
     bf0:	51 e1       	ldi	r21, 0x11	; 17
     bf2:	07 c0       	rjmp	.+14     	; 0xc02 <__udivmodhi4_ep>

00000bf4 <__udivmodhi4_loop>:
     bf4:	aa 1f       	adc	r26, r26
     bf6:	bb 1f       	adc	r27, r27
     bf8:	a6 17       	cp	r26, r22
     bfa:	b7 07       	cpc	r27, r23
     bfc:	10 f0       	brcs	.+4      	; 0xc02 <__udivmodhi4_ep>
     bfe:	a6 1b       	sub	r26, r22
     c00:	b7 0b       	sbc	r27, r23

00000c02 <__udivmodhi4_ep>:
     c02:	88 1f       	adc	r24, r24
     c04:	99 1f       	adc	r25, r25
     c06:	5a 95       	dec	r21
     c08:	a9 f7       	brne	.-22     	; 0xbf4 <__udivmodhi4_loop>
     c0a:	80 95       	com	r24
     c0c:	90 95       	com	r25
     c0e:	bc 01       	movw	r22, r24
     c10:	cd 01       	movw	r24, r26
     c12:	08 95       	ret

00000c14 <sprintf>:
     c14:	0f 93       	push	r16
     c16:	1f 93       	push	r17
     c18:	cf 93       	push	r28
     c1a:	df 93       	push	r29
     c1c:	cd b7       	in	r28, 0x3d	; 61
     c1e:	de b7       	in	r29, 0x3e	; 62
     c20:	2e 97       	sbiw	r28, 0x0e	; 14
     c22:	0f b6       	in	r0, 0x3f	; 63
     c24:	f8 94       	cli
     c26:	de bf       	out	0x3e, r29	; 62
     c28:	0f be       	out	0x3f, r0	; 63
     c2a:	cd bf       	out	0x3d, r28	; 61
     c2c:	0d 89       	ldd	r16, Y+21	; 0x15
     c2e:	1e 89       	ldd	r17, Y+22	; 0x16
     c30:	86 e0       	ldi	r24, 0x06	; 6
     c32:	8c 83       	std	Y+4, r24	; 0x04
     c34:	1a 83       	std	Y+2, r17	; 0x02
     c36:	09 83       	std	Y+1, r16	; 0x01
     c38:	8f ef       	ldi	r24, 0xFF	; 255
     c3a:	9f e7       	ldi	r25, 0x7F	; 127
     c3c:	9e 83       	std	Y+6, r25	; 0x06
     c3e:	8d 83       	std	Y+5, r24	; 0x05
     c40:	ae 01       	movw	r20, r28
     c42:	47 5e       	subi	r20, 0xE7	; 231
     c44:	5f 4f       	sbci	r21, 0xFF	; 255
     c46:	ce 01       	movw	r24, r28
     c48:	01 96       	adiw	r24, 0x01	; 1
     c4a:	6f 89       	ldd	r22, Y+23	; 0x17
     c4c:	78 8d       	ldd	r23, Y+24	; 0x18
     c4e:	0e 94 39 06 	call	0xc72	; 0xc72 <vfprintf>
     c52:	ef 81       	ldd	r30, Y+7	; 0x07
     c54:	f8 85       	ldd	r31, Y+8	; 0x08
     c56:	e0 0f       	add	r30, r16
     c58:	f1 1f       	adc	r31, r17
     c5a:	10 82       	st	Z, r1
     c5c:	2e 96       	adiw	r28, 0x0e	; 14
     c5e:	0f b6       	in	r0, 0x3f	; 63
     c60:	f8 94       	cli
     c62:	de bf       	out	0x3e, r29	; 62
     c64:	0f be       	out	0x3f, r0	; 63
     c66:	cd bf       	out	0x3d, r28	; 61
     c68:	df 91       	pop	r29
     c6a:	cf 91       	pop	r28
     c6c:	1f 91       	pop	r17
     c6e:	0f 91       	pop	r16
     c70:	08 95       	ret

00000c72 <vfprintf>:
     c72:	2f 92       	push	r2
     c74:	3f 92       	push	r3
     c76:	4f 92       	push	r4
     c78:	5f 92       	push	r5
     c7a:	6f 92       	push	r6
     c7c:	7f 92       	push	r7
     c7e:	8f 92       	push	r8
     c80:	9f 92       	push	r9
     c82:	af 92       	push	r10
     c84:	bf 92       	push	r11
     c86:	cf 92       	push	r12
     c88:	df 92       	push	r13
     c8a:	ef 92       	push	r14
     c8c:	ff 92       	push	r15
     c8e:	0f 93       	push	r16
     c90:	1f 93       	push	r17
     c92:	cf 93       	push	r28
     c94:	df 93       	push	r29
     c96:	cd b7       	in	r28, 0x3d	; 61
     c98:	de b7       	in	r29, 0x3e	; 62
     c9a:	2d 97       	sbiw	r28, 0x0d	; 13
     c9c:	0f b6       	in	r0, 0x3f	; 63
     c9e:	f8 94       	cli
     ca0:	de bf       	out	0x3e, r29	; 62
     ca2:	0f be       	out	0x3f, r0	; 63
     ca4:	cd bf       	out	0x3d, r28	; 61
     ca6:	3c 01       	movw	r6, r24
     ca8:	7d 87       	std	Y+13, r23	; 0x0d
     caa:	6c 87       	std	Y+12, r22	; 0x0c
     cac:	5a 01       	movw	r10, r20
     cae:	fc 01       	movw	r30, r24
     cb0:	17 82       	std	Z+7, r1	; 0x07
     cb2:	16 82       	std	Z+6, r1	; 0x06
     cb4:	83 81       	ldd	r24, Z+3	; 0x03
     cb6:	81 ff       	sbrs	r24, 1
     cb8:	c8 c1       	rjmp	.+912    	; 0x104a <vfprintf+0x3d8>
     cba:	2e 01       	movw	r4, r28
     cbc:	08 94       	sec
     cbe:	41 1c       	adc	r4, r1
     cc0:	51 1c       	adc	r5, r1
     cc2:	f3 01       	movw	r30, r6
     cc4:	93 81       	ldd	r25, Z+3	; 0x03
     cc6:	ec 85       	ldd	r30, Y+12	; 0x0c
     cc8:	fd 85       	ldd	r31, Y+13	; 0x0d
     cca:	93 fd       	sbrc	r25, 3
     ccc:	85 91       	lpm	r24, Z+
     cce:	93 ff       	sbrs	r25, 3
     cd0:	81 91       	ld	r24, Z+
     cd2:	fd 87       	std	Y+13, r31	; 0x0d
     cd4:	ec 87       	std	Y+12, r30	; 0x0c
     cd6:	88 23       	and	r24, r24
     cd8:	09 f4       	brne	.+2      	; 0xcdc <vfprintf+0x6a>
     cda:	b3 c1       	rjmp	.+870    	; 0x1042 <vfprintf+0x3d0>
     cdc:	85 32       	cpi	r24, 0x25	; 37
     cde:	41 f4       	brne	.+16     	; 0xcf0 <vfprintf+0x7e>
     ce0:	93 fd       	sbrc	r25, 3
     ce2:	85 91       	lpm	r24, Z+
     ce4:	93 ff       	sbrs	r25, 3
     ce6:	81 91       	ld	r24, Z+
     ce8:	fd 87       	std	Y+13, r31	; 0x0d
     cea:	ec 87       	std	Y+12, r30	; 0x0c
     cec:	85 32       	cpi	r24, 0x25	; 37
     cee:	29 f4       	brne	.+10     	; 0xcfa <vfprintf+0x88>
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	b3 01       	movw	r22, r6
     cf4:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     cf8:	e4 cf       	rjmp	.-56     	; 0xcc2 <vfprintf+0x50>
     cfa:	ff 24       	eor	r15, r15
     cfc:	ee 24       	eor	r14, r14
     cfe:	10 e0       	ldi	r17, 0x00	; 0
     d00:	10 32       	cpi	r17, 0x20	; 32
     d02:	b0 f4       	brcc	.+44     	; 0xd30 <vfprintf+0xbe>
     d04:	8b 32       	cpi	r24, 0x2B	; 43
     d06:	69 f0       	breq	.+26     	; 0xd22 <vfprintf+0xb0>
     d08:	8c 32       	cpi	r24, 0x2C	; 44
     d0a:	28 f4       	brcc	.+10     	; 0xd16 <vfprintf+0xa4>
     d0c:	80 32       	cpi	r24, 0x20	; 32
     d0e:	51 f0       	breq	.+20     	; 0xd24 <vfprintf+0xb2>
     d10:	83 32       	cpi	r24, 0x23	; 35
     d12:	71 f4       	brne	.+28     	; 0xd30 <vfprintf+0xbe>
     d14:	0b c0       	rjmp	.+22     	; 0xd2c <vfprintf+0xba>
     d16:	8d 32       	cpi	r24, 0x2D	; 45
     d18:	39 f0       	breq	.+14     	; 0xd28 <vfprintf+0xb6>
     d1a:	80 33       	cpi	r24, 0x30	; 48
     d1c:	49 f4       	brne	.+18     	; 0xd30 <vfprintf+0xbe>
     d1e:	11 60       	ori	r17, 0x01	; 1
     d20:	2c c0       	rjmp	.+88     	; 0xd7a <vfprintf+0x108>
     d22:	12 60       	ori	r17, 0x02	; 2
     d24:	14 60       	ori	r17, 0x04	; 4
     d26:	29 c0       	rjmp	.+82     	; 0xd7a <vfprintf+0x108>
     d28:	18 60       	ori	r17, 0x08	; 8
     d2a:	27 c0       	rjmp	.+78     	; 0xd7a <vfprintf+0x108>
     d2c:	10 61       	ori	r17, 0x10	; 16
     d2e:	25 c0       	rjmp	.+74     	; 0xd7a <vfprintf+0x108>
     d30:	17 fd       	sbrc	r17, 7
     d32:	2e c0       	rjmp	.+92     	; 0xd90 <vfprintf+0x11e>
     d34:	28 2f       	mov	r18, r24
     d36:	20 53       	subi	r18, 0x30	; 48
     d38:	2a 30       	cpi	r18, 0x0A	; 10
     d3a:	98 f4       	brcc	.+38     	; 0xd62 <vfprintf+0xf0>
     d3c:	16 ff       	sbrs	r17, 6
     d3e:	08 c0       	rjmp	.+16     	; 0xd50 <vfprintf+0xde>
     d40:	8f 2d       	mov	r24, r15
     d42:	88 0f       	add	r24, r24
     d44:	f8 2e       	mov	r15, r24
     d46:	ff 0c       	add	r15, r15
     d48:	ff 0c       	add	r15, r15
     d4a:	f8 0e       	add	r15, r24
     d4c:	f2 0e       	add	r15, r18
     d4e:	15 c0       	rjmp	.+42     	; 0xd7a <vfprintf+0x108>
     d50:	8e 2d       	mov	r24, r14
     d52:	88 0f       	add	r24, r24
     d54:	e8 2e       	mov	r14, r24
     d56:	ee 0c       	add	r14, r14
     d58:	ee 0c       	add	r14, r14
     d5a:	e8 0e       	add	r14, r24
     d5c:	e2 0e       	add	r14, r18
     d5e:	10 62       	ori	r17, 0x20	; 32
     d60:	0c c0       	rjmp	.+24     	; 0xd7a <vfprintf+0x108>
     d62:	8e 32       	cpi	r24, 0x2E	; 46
     d64:	21 f4       	brne	.+8      	; 0xd6e <vfprintf+0xfc>
     d66:	16 fd       	sbrc	r17, 6
     d68:	6c c1       	rjmp	.+728    	; 0x1042 <vfprintf+0x3d0>
     d6a:	10 64       	ori	r17, 0x40	; 64
     d6c:	06 c0       	rjmp	.+12     	; 0xd7a <vfprintf+0x108>
     d6e:	8c 36       	cpi	r24, 0x6C	; 108
     d70:	11 f4       	brne	.+4      	; 0xd76 <vfprintf+0x104>
     d72:	10 68       	ori	r17, 0x80	; 128
     d74:	02 c0       	rjmp	.+4      	; 0xd7a <vfprintf+0x108>
     d76:	88 36       	cpi	r24, 0x68	; 104
     d78:	59 f4       	brne	.+22     	; 0xd90 <vfprintf+0x11e>
     d7a:	ec 85       	ldd	r30, Y+12	; 0x0c
     d7c:	fd 85       	ldd	r31, Y+13	; 0x0d
     d7e:	93 fd       	sbrc	r25, 3
     d80:	85 91       	lpm	r24, Z+
     d82:	93 ff       	sbrs	r25, 3
     d84:	81 91       	ld	r24, Z+
     d86:	fd 87       	std	Y+13, r31	; 0x0d
     d88:	ec 87       	std	Y+12, r30	; 0x0c
     d8a:	88 23       	and	r24, r24
     d8c:	09 f0       	breq	.+2      	; 0xd90 <vfprintf+0x11e>
     d8e:	b8 cf       	rjmp	.-144    	; 0xd00 <vfprintf+0x8e>
     d90:	98 2f       	mov	r25, r24
     d92:	95 54       	subi	r25, 0x45	; 69
     d94:	93 30       	cpi	r25, 0x03	; 3
     d96:	18 f0       	brcs	.+6      	; 0xd9e <vfprintf+0x12c>
     d98:	90 52       	subi	r25, 0x20	; 32
     d9a:	93 30       	cpi	r25, 0x03	; 3
     d9c:	38 f4       	brcc	.+14     	; 0xdac <vfprintf+0x13a>
     d9e:	24 e0       	ldi	r18, 0x04	; 4
     da0:	30 e0       	ldi	r19, 0x00	; 0
     da2:	a2 0e       	add	r10, r18
     da4:	b3 1e       	adc	r11, r19
     da6:	3f e3       	ldi	r19, 0x3F	; 63
     da8:	39 83       	std	Y+1, r19	; 0x01
     daa:	0f c0       	rjmp	.+30     	; 0xdca <vfprintf+0x158>
     dac:	83 36       	cpi	r24, 0x63	; 99
     dae:	31 f0       	breq	.+12     	; 0xdbc <vfprintf+0x14a>
     db0:	83 37       	cpi	r24, 0x73	; 115
     db2:	81 f0       	breq	.+32     	; 0xdd4 <vfprintf+0x162>
     db4:	83 35       	cpi	r24, 0x53	; 83
     db6:	09 f0       	breq	.+2      	; 0xdba <vfprintf+0x148>
     db8:	5a c0       	rjmp	.+180    	; 0xe6e <vfprintf+0x1fc>
     dba:	22 c0       	rjmp	.+68     	; 0xe00 <vfprintf+0x18e>
     dbc:	f5 01       	movw	r30, r10
     dbe:	80 81       	ld	r24, Z
     dc0:	89 83       	std	Y+1, r24	; 0x01
     dc2:	22 e0       	ldi	r18, 0x02	; 2
     dc4:	30 e0       	ldi	r19, 0x00	; 0
     dc6:	a2 0e       	add	r10, r18
     dc8:	b3 1e       	adc	r11, r19
     dca:	21 e0       	ldi	r18, 0x01	; 1
     dcc:	c2 2e       	mov	r12, r18
     dce:	d1 2c       	mov	r13, r1
     dd0:	42 01       	movw	r8, r4
     dd2:	14 c0       	rjmp	.+40     	; 0xdfc <vfprintf+0x18a>
     dd4:	92 e0       	ldi	r25, 0x02	; 2
     dd6:	29 2e       	mov	r2, r25
     dd8:	31 2c       	mov	r3, r1
     dda:	2a 0c       	add	r2, r10
     ddc:	3b 1c       	adc	r3, r11
     dde:	f5 01       	movw	r30, r10
     de0:	80 80       	ld	r8, Z
     de2:	91 80       	ldd	r9, Z+1	; 0x01
     de4:	16 ff       	sbrs	r17, 6
     de6:	03 c0       	rjmp	.+6      	; 0xdee <vfprintf+0x17c>
     de8:	6f 2d       	mov	r22, r15
     dea:	70 e0       	ldi	r23, 0x00	; 0
     dec:	02 c0       	rjmp	.+4      	; 0xdf2 <vfprintf+0x180>
     dee:	6f ef       	ldi	r22, 0xFF	; 255
     df0:	7f ef       	ldi	r23, 0xFF	; 255
     df2:	c4 01       	movw	r24, r8
     df4:	0e 94 4b 08 	call	0x1096	; 0x1096 <strnlen>
     df8:	6c 01       	movw	r12, r24
     dfa:	51 01       	movw	r10, r2
     dfc:	1f 77       	andi	r17, 0x7F	; 127
     dfe:	15 c0       	rjmp	.+42     	; 0xe2a <vfprintf+0x1b8>
     e00:	82 e0       	ldi	r24, 0x02	; 2
     e02:	28 2e       	mov	r2, r24
     e04:	31 2c       	mov	r3, r1
     e06:	2a 0c       	add	r2, r10
     e08:	3b 1c       	adc	r3, r11
     e0a:	f5 01       	movw	r30, r10
     e0c:	80 80       	ld	r8, Z
     e0e:	91 80       	ldd	r9, Z+1	; 0x01
     e10:	16 ff       	sbrs	r17, 6
     e12:	03 c0       	rjmp	.+6      	; 0xe1a <vfprintf+0x1a8>
     e14:	6f 2d       	mov	r22, r15
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	02 c0       	rjmp	.+4      	; 0xe1e <vfprintf+0x1ac>
     e1a:	6f ef       	ldi	r22, 0xFF	; 255
     e1c:	7f ef       	ldi	r23, 0xFF	; 255
     e1e:	c4 01       	movw	r24, r8
     e20:	0e 94 40 08 	call	0x1080	; 0x1080 <strnlen_P>
     e24:	6c 01       	movw	r12, r24
     e26:	10 68       	ori	r17, 0x80	; 128
     e28:	51 01       	movw	r10, r2
     e2a:	13 fd       	sbrc	r17, 3
     e2c:	1c c0       	rjmp	.+56     	; 0xe66 <vfprintf+0x1f4>
     e2e:	06 c0       	rjmp	.+12     	; 0xe3c <vfprintf+0x1ca>
     e30:	80 e2       	ldi	r24, 0x20	; 32
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	b3 01       	movw	r22, r6
     e36:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     e3a:	ea 94       	dec	r14
     e3c:	8e 2d       	mov	r24, r14
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	c8 16       	cp	r12, r24
     e42:	d9 06       	cpc	r13, r25
     e44:	a8 f3       	brcs	.-22     	; 0xe30 <vfprintf+0x1be>
     e46:	0f c0       	rjmp	.+30     	; 0xe66 <vfprintf+0x1f4>
     e48:	f4 01       	movw	r30, r8
     e4a:	17 fd       	sbrc	r17, 7
     e4c:	85 91       	lpm	r24, Z+
     e4e:	17 ff       	sbrs	r17, 7
     e50:	81 91       	ld	r24, Z+
     e52:	4f 01       	movw	r8, r30
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	b3 01       	movw	r22, r6
     e58:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     e5c:	e1 10       	cpse	r14, r1
     e5e:	ea 94       	dec	r14
     e60:	08 94       	sec
     e62:	c1 08       	sbc	r12, r1
     e64:	d1 08       	sbc	r13, r1
     e66:	c1 14       	cp	r12, r1
     e68:	d1 04       	cpc	r13, r1
     e6a:	71 f7       	brne	.-36     	; 0xe48 <vfprintf+0x1d6>
     e6c:	e7 c0       	rjmp	.+462    	; 0x103c <vfprintf+0x3ca>
     e6e:	84 36       	cpi	r24, 0x64	; 100
     e70:	11 f0       	breq	.+4      	; 0xe76 <vfprintf+0x204>
     e72:	89 36       	cpi	r24, 0x69	; 105
     e74:	51 f5       	brne	.+84     	; 0xeca <vfprintf+0x258>
     e76:	f5 01       	movw	r30, r10
     e78:	17 ff       	sbrs	r17, 7
     e7a:	07 c0       	rjmp	.+14     	; 0xe8a <vfprintf+0x218>
     e7c:	80 81       	ld	r24, Z
     e7e:	91 81       	ldd	r25, Z+1	; 0x01
     e80:	a2 81       	ldd	r26, Z+2	; 0x02
     e82:	b3 81       	ldd	r27, Z+3	; 0x03
     e84:	24 e0       	ldi	r18, 0x04	; 4
     e86:	30 e0       	ldi	r19, 0x00	; 0
     e88:	08 c0       	rjmp	.+16     	; 0xe9a <vfprintf+0x228>
     e8a:	80 81       	ld	r24, Z
     e8c:	91 81       	ldd	r25, Z+1	; 0x01
     e8e:	aa 27       	eor	r26, r26
     e90:	97 fd       	sbrc	r25, 7
     e92:	a0 95       	com	r26
     e94:	ba 2f       	mov	r27, r26
     e96:	22 e0       	ldi	r18, 0x02	; 2
     e98:	30 e0       	ldi	r19, 0x00	; 0
     e9a:	a2 0e       	add	r10, r18
     e9c:	b3 1e       	adc	r11, r19
     e9e:	01 2f       	mov	r16, r17
     ea0:	0f 76       	andi	r16, 0x6F	; 111
     ea2:	b7 ff       	sbrs	r27, 7
     ea4:	08 c0       	rjmp	.+16     	; 0xeb6 <vfprintf+0x244>
     ea6:	b0 95       	com	r27
     ea8:	a0 95       	com	r26
     eaa:	90 95       	com	r25
     eac:	81 95       	neg	r24
     eae:	9f 4f       	sbci	r25, 0xFF	; 255
     eb0:	af 4f       	sbci	r26, 0xFF	; 255
     eb2:	bf 4f       	sbci	r27, 0xFF	; 255
     eb4:	00 68       	ori	r16, 0x80	; 128
     eb6:	bc 01       	movw	r22, r24
     eb8:	cd 01       	movw	r24, r26
     eba:	a2 01       	movw	r20, r4
     ebc:	2a e0       	ldi	r18, 0x0A	; 10
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	0e 94 82 08 	call	0x1104	; 0x1104 <__ultoa_invert>
     ec4:	d8 2e       	mov	r13, r24
     ec6:	d4 18       	sub	r13, r4
     ec8:	3f c0       	rjmp	.+126    	; 0xf48 <vfprintf+0x2d6>
     eca:	85 37       	cpi	r24, 0x75	; 117
     ecc:	21 f4       	brne	.+8      	; 0xed6 <vfprintf+0x264>
     ece:	1f 7e       	andi	r17, 0xEF	; 239
     ed0:	2a e0       	ldi	r18, 0x0A	; 10
     ed2:	30 e0       	ldi	r19, 0x00	; 0
     ed4:	20 c0       	rjmp	.+64     	; 0xf16 <vfprintf+0x2a4>
     ed6:	19 7f       	andi	r17, 0xF9	; 249
     ed8:	8f 36       	cpi	r24, 0x6F	; 111
     eda:	a9 f0       	breq	.+42     	; 0xf06 <vfprintf+0x294>
     edc:	80 37       	cpi	r24, 0x70	; 112
     ede:	20 f4       	brcc	.+8      	; 0xee8 <vfprintf+0x276>
     ee0:	88 35       	cpi	r24, 0x58	; 88
     ee2:	09 f0       	breq	.+2      	; 0xee6 <vfprintf+0x274>
     ee4:	ae c0       	rjmp	.+348    	; 0x1042 <vfprintf+0x3d0>
     ee6:	0b c0       	rjmp	.+22     	; 0xefe <vfprintf+0x28c>
     ee8:	80 37       	cpi	r24, 0x70	; 112
     eea:	21 f0       	breq	.+8      	; 0xef4 <vfprintf+0x282>
     eec:	88 37       	cpi	r24, 0x78	; 120
     eee:	09 f0       	breq	.+2      	; 0xef2 <vfprintf+0x280>
     ef0:	a8 c0       	rjmp	.+336    	; 0x1042 <vfprintf+0x3d0>
     ef2:	01 c0       	rjmp	.+2      	; 0xef6 <vfprintf+0x284>
     ef4:	10 61       	ori	r17, 0x10	; 16
     ef6:	14 ff       	sbrs	r17, 4
     ef8:	09 c0       	rjmp	.+18     	; 0xf0c <vfprintf+0x29a>
     efa:	14 60       	ori	r17, 0x04	; 4
     efc:	07 c0       	rjmp	.+14     	; 0xf0c <vfprintf+0x29a>
     efe:	14 ff       	sbrs	r17, 4
     f00:	08 c0       	rjmp	.+16     	; 0xf12 <vfprintf+0x2a0>
     f02:	16 60       	ori	r17, 0x06	; 6
     f04:	06 c0       	rjmp	.+12     	; 0xf12 <vfprintf+0x2a0>
     f06:	28 e0       	ldi	r18, 0x08	; 8
     f08:	30 e0       	ldi	r19, 0x00	; 0
     f0a:	05 c0       	rjmp	.+10     	; 0xf16 <vfprintf+0x2a4>
     f0c:	20 e1       	ldi	r18, 0x10	; 16
     f0e:	30 e0       	ldi	r19, 0x00	; 0
     f10:	02 c0       	rjmp	.+4      	; 0xf16 <vfprintf+0x2a4>
     f12:	20 e1       	ldi	r18, 0x10	; 16
     f14:	32 e0       	ldi	r19, 0x02	; 2
     f16:	f5 01       	movw	r30, r10
     f18:	17 ff       	sbrs	r17, 7
     f1a:	07 c0       	rjmp	.+14     	; 0xf2a <vfprintf+0x2b8>
     f1c:	60 81       	ld	r22, Z
     f1e:	71 81       	ldd	r23, Z+1	; 0x01
     f20:	82 81       	ldd	r24, Z+2	; 0x02
     f22:	93 81       	ldd	r25, Z+3	; 0x03
     f24:	44 e0       	ldi	r20, 0x04	; 4
     f26:	50 e0       	ldi	r21, 0x00	; 0
     f28:	06 c0       	rjmp	.+12     	; 0xf36 <vfprintf+0x2c4>
     f2a:	60 81       	ld	r22, Z
     f2c:	71 81       	ldd	r23, Z+1	; 0x01
     f2e:	80 e0       	ldi	r24, 0x00	; 0
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	42 e0       	ldi	r20, 0x02	; 2
     f34:	50 e0       	ldi	r21, 0x00	; 0
     f36:	a4 0e       	add	r10, r20
     f38:	b5 1e       	adc	r11, r21
     f3a:	a2 01       	movw	r20, r4
     f3c:	0e 94 82 08 	call	0x1104	; 0x1104 <__ultoa_invert>
     f40:	d8 2e       	mov	r13, r24
     f42:	d4 18       	sub	r13, r4
     f44:	01 2f       	mov	r16, r17
     f46:	0f 77       	andi	r16, 0x7F	; 127
     f48:	06 ff       	sbrs	r16, 6
     f4a:	09 c0       	rjmp	.+18     	; 0xf5e <vfprintf+0x2ec>
     f4c:	0e 7f       	andi	r16, 0xFE	; 254
     f4e:	df 14       	cp	r13, r15
     f50:	30 f4       	brcc	.+12     	; 0xf5e <vfprintf+0x2ec>
     f52:	04 ff       	sbrs	r16, 4
     f54:	06 c0       	rjmp	.+12     	; 0xf62 <vfprintf+0x2f0>
     f56:	02 fd       	sbrc	r16, 2
     f58:	04 c0       	rjmp	.+8      	; 0xf62 <vfprintf+0x2f0>
     f5a:	0f 7e       	andi	r16, 0xEF	; 239
     f5c:	02 c0       	rjmp	.+4      	; 0xf62 <vfprintf+0x2f0>
     f5e:	1d 2d       	mov	r17, r13
     f60:	01 c0       	rjmp	.+2      	; 0xf64 <vfprintf+0x2f2>
     f62:	1f 2d       	mov	r17, r15
     f64:	80 2f       	mov	r24, r16
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	04 ff       	sbrs	r16, 4
     f6a:	0c c0       	rjmp	.+24     	; 0xf84 <vfprintf+0x312>
     f6c:	fe 01       	movw	r30, r28
     f6e:	ed 0d       	add	r30, r13
     f70:	f1 1d       	adc	r31, r1
     f72:	20 81       	ld	r18, Z
     f74:	20 33       	cpi	r18, 0x30	; 48
     f76:	11 f4       	brne	.+4      	; 0xf7c <vfprintf+0x30a>
     f78:	09 7e       	andi	r16, 0xE9	; 233
     f7a:	09 c0       	rjmp	.+18     	; 0xf8e <vfprintf+0x31c>
     f7c:	02 ff       	sbrs	r16, 2
     f7e:	06 c0       	rjmp	.+12     	; 0xf8c <vfprintf+0x31a>
     f80:	1e 5f       	subi	r17, 0xFE	; 254
     f82:	05 c0       	rjmp	.+10     	; 0xf8e <vfprintf+0x31c>
     f84:	86 78       	andi	r24, 0x86	; 134
     f86:	90 70       	andi	r25, 0x00	; 0
     f88:	00 97       	sbiw	r24, 0x00	; 0
     f8a:	09 f0       	breq	.+2      	; 0xf8e <vfprintf+0x31c>
     f8c:	1f 5f       	subi	r17, 0xFF	; 255
     f8e:	80 2e       	mov	r8, r16
     f90:	99 24       	eor	r9, r9
     f92:	03 fd       	sbrc	r16, 3
     f94:	12 c0       	rjmp	.+36     	; 0xfba <vfprintf+0x348>
     f96:	00 ff       	sbrs	r16, 0
     f98:	0d c0       	rjmp	.+26     	; 0xfb4 <vfprintf+0x342>
     f9a:	fd 2c       	mov	r15, r13
     f9c:	1e 15       	cp	r17, r14
     f9e:	50 f4       	brcc	.+20     	; 0xfb4 <vfprintf+0x342>
     fa0:	fe 0c       	add	r15, r14
     fa2:	f1 1a       	sub	r15, r17
     fa4:	1e 2d       	mov	r17, r14
     fa6:	06 c0       	rjmp	.+12     	; 0xfb4 <vfprintf+0x342>
     fa8:	80 e2       	ldi	r24, 0x20	; 32
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	b3 01       	movw	r22, r6
     fae:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     fb2:	1f 5f       	subi	r17, 0xFF	; 255
     fb4:	1e 15       	cp	r17, r14
     fb6:	c0 f3       	brcs	.-16     	; 0xfa8 <vfprintf+0x336>
     fb8:	04 c0       	rjmp	.+8      	; 0xfc2 <vfprintf+0x350>
     fba:	1e 15       	cp	r17, r14
     fbc:	10 f4       	brcc	.+4      	; 0xfc2 <vfprintf+0x350>
     fbe:	e1 1a       	sub	r14, r17
     fc0:	01 c0       	rjmp	.+2      	; 0xfc4 <vfprintf+0x352>
     fc2:	ee 24       	eor	r14, r14
     fc4:	84 fe       	sbrs	r8, 4
     fc6:	0f c0       	rjmp	.+30     	; 0xfe6 <vfprintf+0x374>
     fc8:	80 e3       	ldi	r24, 0x30	; 48
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	b3 01       	movw	r22, r6
     fce:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
     fd2:	82 fe       	sbrs	r8, 2
     fd4:	1f c0       	rjmp	.+62     	; 0x1014 <vfprintf+0x3a2>
     fd6:	81 fe       	sbrs	r8, 1
     fd8:	03 c0       	rjmp	.+6      	; 0xfe0 <vfprintf+0x36e>
     fda:	88 e5       	ldi	r24, 0x58	; 88
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	10 c0       	rjmp	.+32     	; 0x1000 <vfprintf+0x38e>
     fe0:	88 e7       	ldi	r24, 0x78	; 120
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	0d c0       	rjmp	.+26     	; 0x1000 <vfprintf+0x38e>
     fe6:	c4 01       	movw	r24, r8
     fe8:	86 78       	andi	r24, 0x86	; 134
     fea:	90 70       	andi	r25, 0x00	; 0
     fec:	00 97       	sbiw	r24, 0x00	; 0
     fee:	91 f0       	breq	.+36     	; 0x1014 <vfprintf+0x3a2>
     ff0:	81 fc       	sbrc	r8, 1
     ff2:	02 c0       	rjmp	.+4      	; 0xff8 <vfprintf+0x386>
     ff4:	80 e2       	ldi	r24, 0x20	; 32
     ff6:	01 c0       	rjmp	.+2      	; 0xffa <vfprintf+0x388>
     ff8:	8b e2       	ldi	r24, 0x2B	; 43
     ffa:	07 fd       	sbrc	r16, 7
     ffc:	8d e2       	ldi	r24, 0x2D	; 45
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	b3 01       	movw	r22, r6
    1002:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
    1006:	06 c0       	rjmp	.+12     	; 0x1014 <vfprintf+0x3a2>
    1008:	80 e3       	ldi	r24, 0x30	; 48
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	b3 01       	movw	r22, r6
    100e:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
    1012:	fa 94       	dec	r15
    1014:	df 14       	cp	r13, r15
    1016:	c0 f3       	brcs	.-16     	; 0x1008 <vfprintf+0x396>
    1018:	da 94       	dec	r13
    101a:	f2 01       	movw	r30, r4
    101c:	ed 0d       	add	r30, r13
    101e:	f1 1d       	adc	r31, r1
    1020:	80 81       	ld	r24, Z
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	b3 01       	movw	r22, r6
    1026:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
    102a:	dd 20       	and	r13, r13
    102c:	a9 f7       	brne	.-22     	; 0x1018 <vfprintf+0x3a6>
    102e:	06 c0       	rjmp	.+12     	; 0x103c <vfprintf+0x3ca>
    1030:	80 e2       	ldi	r24, 0x20	; 32
    1032:	90 e0       	ldi	r25, 0x00	; 0
    1034:	b3 01       	movw	r22, r6
    1036:	0e 94 56 08 	call	0x10ac	; 0x10ac <fputc>
    103a:	ea 94       	dec	r14
    103c:	ee 20       	and	r14, r14
    103e:	c1 f7       	brne	.-16     	; 0x1030 <vfprintf+0x3be>
    1040:	40 ce       	rjmp	.-896    	; 0xcc2 <vfprintf+0x50>
    1042:	f3 01       	movw	r30, r6
    1044:	86 81       	ldd	r24, Z+6	; 0x06
    1046:	97 81       	ldd	r25, Z+7	; 0x07
    1048:	02 c0       	rjmp	.+4      	; 0x104e <vfprintf+0x3dc>
    104a:	8f ef       	ldi	r24, 0xFF	; 255
    104c:	9f ef       	ldi	r25, 0xFF	; 255
    104e:	2d 96       	adiw	r28, 0x0d	; 13
    1050:	0f b6       	in	r0, 0x3f	; 63
    1052:	f8 94       	cli
    1054:	de bf       	out	0x3e, r29	; 62
    1056:	0f be       	out	0x3f, r0	; 63
    1058:	cd bf       	out	0x3d, r28	; 61
    105a:	df 91       	pop	r29
    105c:	cf 91       	pop	r28
    105e:	1f 91       	pop	r17
    1060:	0f 91       	pop	r16
    1062:	ff 90       	pop	r15
    1064:	ef 90       	pop	r14
    1066:	df 90       	pop	r13
    1068:	cf 90       	pop	r12
    106a:	bf 90       	pop	r11
    106c:	af 90       	pop	r10
    106e:	9f 90       	pop	r9
    1070:	8f 90       	pop	r8
    1072:	7f 90       	pop	r7
    1074:	6f 90       	pop	r6
    1076:	5f 90       	pop	r5
    1078:	4f 90       	pop	r4
    107a:	3f 90       	pop	r3
    107c:	2f 90       	pop	r2
    107e:	08 95       	ret

00001080 <strnlen_P>:
    1080:	fc 01       	movw	r30, r24
    1082:	05 90       	lpm	r0, Z+
    1084:	61 50       	subi	r22, 0x01	; 1
    1086:	70 40       	sbci	r23, 0x00	; 0
    1088:	01 10       	cpse	r0, r1
    108a:	d8 f7       	brcc	.-10     	; 0x1082 <strnlen_P+0x2>
    108c:	80 95       	com	r24
    108e:	90 95       	com	r25
    1090:	8e 0f       	add	r24, r30
    1092:	9f 1f       	adc	r25, r31
    1094:	08 95       	ret

00001096 <strnlen>:
    1096:	fc 01       	movw	r30, r24
    1098:	61 50       	subi	r22, 0x01	; 1
    109a:	70 40       	sbci	r23, 0x00	; 0
    109c:	01 90       	ld	r0, Z+
    109e:	01 10       	cpse	r0, r1
    10a0:	d8 f7       	brcc	.-10     	; 0x1098 <strnlen+0x2>
    10a2:	80 95       	com	r24
    10a4:	90 95       	com	r25
    10a6:	8e 0f       	add	r24, r30
    10a8:	9f 1f       	adc	r25, r31
    10aa:	08 95       	ret

000010ac <fputc>:
    10ac:	0f 93       	push	r16
    10ae:	1f 93       	push	r17
    10b0:	cf 93       	push	r28
    10b2:	df 93       	push	r29
    10b4:	8c 01       	movw	r16, r24
    10b6:	eb 01       	movw	r28, r22
    10b8:	8b 81       	ldd	r24, Y+3	; 0x03
    10ba:	81 ff       	sbrs	r24, 1
    10bc:	1b c0       	rjmp	.+54     	; 0x10f4 <fputc+0x48>
    10be:	82 ff       	sbrs	r24, 2
    10c0:	0d c0       	rjmp	.+26     	; 0x10dc <fputc+0x30>
    10c2:	2e 81       	ldd	r18, Y+6	; 0x06
    10c4:	3f 81       	ldd	r19, Y+7	; 0x07
    10c6:	8c 81       	ldd	r24, Y+4	; 0x04
    10c8:	9d 81       	ldd	r25, Y+5	; 0x05
    10ca:	28 17       	cp	r18, r24
    10cc:	39 07       	cpc	r19, r25
    10ce:	64 f4       	brge	.+24     	; 0x10e8 <fputc+0x3c>
    10d0:	e8 81       	ld	r30, Y
    10d2:	f9 81       	ldd	r31, Y+1	; 0x01
    10d4:	01 93       	st	Z+, r16
    10d6:	f9 83       	std	Y+1, r31	; 0x01
    10d8:	e8 83       	st	Y, r30
    10da:	06 c0       	rjmp	.+12     	; 0x10e8 <fputc+0x3c>
    10dc:	e8 85       	ldd	r30, Y+8	; 0x08
    10de:	f9 85       	ldd	r31, Y+9	; 0x09
    10e0:	80 2f       	mov	r24, r16
    10e2:	09 95       	icall
    10e4:	00 97       	sbiw	r24, 0x00	; 0
    10e6:	31 f4       	brne	.+12     	; 0x10f4 <fputc+0x48>
    10e8:	8e 81       	ldd	r24, Y+6	; 0x06
    10ea:	9f 81       	ldd	r25, Y+7	; 0x07
    10ec:	01 96       	adiw	r24, 0x01	; 1
    10ee:	9f 83       	std	Y+7, r25	; 0x07
    10f0:	8e 83       	std	Y+6, r24	; 0x06
    10f2:	02 c0       	rjmp	.+4      	; 0x10f8 <fputc+0x4c>
    10f4:	0f ef       	ldi	r16, 0xFF	; 255
    10f6:	1f ef       	ldi	r17, 0xFF	; 255
    10f8:	c8 01       	movw	r24, r16
    10fa:	df 91       	pop	r29
    10fc:	cf 91       	pop	r28
    10fe:	1f 91       	pop	r17
    1100:	0f 91       	pop	r16
    1102:	08 95       	ret

00001104 <__ultoa_invert>:
    1104:	fa 01       	movw	r30, r20
    1106:	aa 27       	eor	r26, r26
    1108:	28 30       	cpi	r18, 0x08	; 8
    110a:	51 f1       	breq	.+84     	; 0x1160 <__ultoa_invert+0x5c>
    110c:	20 31       	cpi	r18, 0x10	; 16
    110e:	81 f1       	breq	.+96     	; 0x1170 <__ultoa_invert+0x6c>
    1110:	e8 94       	clt
    1112:	6f 93       	push	r22
    1114:	6e 7f       	andi	r22, 0xFE	; 254
    1116:	6e 5f       	subi	r22, 0xFE	; 254
    1118:	7f 4f       	sbci	r23, 0xFF	; 255
    111a:	8f 4f       	sbci	r24, 0xFF	; 255
    111c:	9f 4f       	sbci	r25, 0xFF	; 255
    111e:	af 4f       	sbci	r26, 0xFF	; 255
    1120:	b1 e0       	ldi	r27, 0x01	; 1
    1122:	3e d0       	rcall	.+124    	; 0x11a0 <__ultoa_invert+0x9c>
    1124:	b4 e0       	ldi	r27, 0x04	; 4
    1126:	3c d0       	rcall	.+120    	; 0x11a0 <__ultoa_invert+0x9c>
    1128:	67 0f       	add	r22, r23
    112a:	78 1f       	adc	r23, r24
    112c:	89 1f       	adc	r24, r25
    112e:	9a 1f       	adc	r25, r26
    1130:	a1 1d       	adc	r26, r1
    1132:	68 0f       	add	r22, r24
    1134:	79 1f       	adc	r23, r25
    1136:	8a 1f       	adc	r24, r26
    1138:	91 1d       	adc	r25, r1
    113a:	a1 1d       	adc	r26, r1
    113c:	6a 0f       	add	r22, r26
    113e:	71 1d       	adc	r23, r1
    1140:	81 1d       	adc	r24, r1
    1142:	91 1d       	adc	r25, r1
    1144:	a1 1d       	adc	r26, r1
    1146:	20 d0       	rcall	.+64     	; 0x1188 <__ultoa_invert+0x84>
    1148:	09 f4       	brne	.+2      	; 0x114c <__ultoa_invert+0x48>
    114a:	68 94       	set
    114c:	3f 91       	pop	r19
    114e:	2a e0       	ldi	r18, 0x0A	; 10
    1150:	26 9f       	mul	r18, r22
    1152:	11 24       	eor	r1, r1
    1154:	30 19       	sub	r19, r0
    1156:	30 5d       	subi	r19, 0xD0	; 208
    1158:	31 93       	st	Z+, r19
    115a:	de f6       	brtc	.-74     	; 0x1112 <__ultoa_invert+0xe>
    115c:	cf 01       	movw	r24, r30
    115e:	08 95       	ret
    1160:	46 2f       	mov	r20, r22
    1162:	47 70       	andi	r20, 0x07	; 7
    1164:	40 5d       	subi	r20, 0xD0	; 208
    1166:	41 93       	st	Z+, r20
    1168:	b3 e0       	ldi	r27, 0x03	; 3
    116a:	0f d0       	rcall	.+30     	; 0x118a <__ultoa_invert+0x86>
    116c:	c9 f7       	brne	.-14     	; 0x1160 <__ultoa_invert+0x5c>
    116e:	f6 cf       	rjmp	.-20     	; 0x115c <__ultoa_invert+0x58>
    1170:	46 2f       	mov	r20, r22
    1172:	4f 70       	andi	r20, 0x0F	; 15
    1174:	40 5d       	subi	r20, 0xD0	; 208
    1176:	4a 33       	cpi	r20, 0x3A	; 58
    1178:	18 f0       	brcs	.+6      	; 0x1180 <__ultoa_invert+0x7c>
    117a:	49 5d       	subi	r20, 0xD9	; 217
    117c:	31 fd       	sbrc	r19, 1
    117e:	40 52       	subi	r20, 0x20	; 32
    1180:	41 93       	st	Z+, r20
    1182:	02 d0       	rcall	.+4      	; 0x1188 <__ultoa_invert+0x84>
    1184:	a9 f7       	brne	.-22     	; 0x1170 <__ultoa_invert+0x6c>
    1186:	ea cf       	rjmp	.-44     	; 0x115c <__ultoa_invert+0x58>
    1188:	b4 e0       	ldi	r27, 0x04	; 4
    118a:	a6 95       	lsr	r26
    118c:	97 95       	ror	r25
    118e:	87 95       	ror	r24
    1190:	77 95       	ror	r23
    1192:	67 95       	ror	r22
    1194:	ba 95       	dec	r27
    1196:	c9 f7       	brne	.-14     	; 0x118a <__ultoa_invert+0x86>
    1198:	00 97       	sbiw	r24, 0x00	; 0
    119a:	61 05       	cpc	r22, r1
    119c:	71 05       	cpc	r23, r1
    119e:	08 95       	ret
    11a0:	9b 01       	movw	r18, r22
    11a2:	ac 01       	movw	r20, r24
    11a4:	0a 2e       	mov	r0, r26
    11a6:	06 94       	lsr	r0
    11a8:	57 95       	ror	r21
    11aa:	47 95       	ror	r20
    11ac:	37 95       	ror	r19
    11ae:	27 95       	ror	r18
    11b0:	ba 95       	dec	r27
    11b2:	c9 f7       	brne	.-14     	; 0x11a6 <__ultoa_invert+0xa2>
    11b4:	62 0f       	add	r22, r18
    11b6:	73 1f       	adc	r23, r19
    11b8:	84 1f       	adc	r24, r20
    11ba:	95 1f       	adc	r25, r21
    11bc:	a0 1d       	adc	r26, r0
    11be:	08 95       	ret

000011c0 <_exit>:
    11c0:	f8 94       	cli

000011c2 <__stop_program>:
    11c2:	ff cf       	rjmp	.-2      	; 0x11c2 <__stop_program>
